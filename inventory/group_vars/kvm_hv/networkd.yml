---

# https://wiki.debian.org/Bonding#Configuring_the_bond_device
# https://serverfault.com/questions/1106863/bridge-on-a-bonded-interface-with-systemd-networkd
# https://www.reddit.com/r/linux/comments/30hk8e/creating_a_bridge_for_virtual_machines_using/

__bond0_primary_iface: "enp1s0"
__bond0_backup_iface: "eno1"

__mgmt_metric: 512
__mgmt_dns: true
__general_dns: false
__general_route: false

# Used for GENERAL and VM where 21, 22 and 23 are taken
__ip_offset: 50

__host_ips:
  general: "{{ all_net.general.cidr | ansible.utils.ipaddr(__host_num | int + __ip_offset) }}"
  mgmt: "{{ all_net.mgmt.cidr | ansible.utils.ipaddr(__host_num) }}"
  noinet: "{{ all_net.noinet.cidr | ansible.utils.ipaddr(__host_num) }}"
  san: "{{ all_net.san.cidr | ansible.utils.ipaddr(__host_num) }}"
  vm: "{{ all_net.vm.cidr | ansible.utils.ipaddr(__host_num | int + __ip_offset) }}"

host_ips: >-
  {%- set tmp = {} -%}
  {%- for k, v in __host_ips.items() -%}
  {{- tmp.update({k: v | ansible.utils.ipaddr('address')}) -}}
  {%- endfor -%}
  {{ tmp }}

networkd_netdevs:
  - bond0: |
      [NetDev]
      Name=bond0
      Description=Trunk bond interface
      Kind=bond
      MTUBytes=9000

      [Bond]
      Mode=active-backup
      PrimaryReselectPolicy=always
      MIIMonitorSec=1s

  - bond0.2: |
      [NetDev]
      Name=bond0.{{ all_net.san.vlan }}
      Kind=vlan
      MTUBytes={{ all_net.san.mtu | default(1500) }}

      [VLAN]
      Id={{ all_net.san.vlan }}

  - bond0.10: |
      [NetDev]
      Name=bond0.{{ all_net.vm.vlan }}
      Kind=vlan
      MTUBytes={{ all_net.vm.mtu | default(1500) }}

      [VLAN]
      Id={{ all_net.vm.vlan }}

  - bond0.20: |
      [NetDev]
      Name=bond0.{{ all_net.noinet.vlan }}
      Kind=vlan
      MTUBytes={{ all_net.noinet.mtu | default(1500) }}

      [VLAN]
      Id={{ all_net.noinet.vlan }}

  - bond0.50: |
      [NetDev]
      Name=bond0.{{ all_net.general.vlan }}
      Kind=vlan
      MTUBytes={{ all_net.general.mtu | default(1500) }}

      [VLAN]
      Id={{ all_net.general.vlan }}

  - bond0.100: |
      [NetDev]
      Name=bond0.{{ all_net.mgmt.vlan }}
      Kind=vlan
      MTUBytes={{ all_net.mgmt.mtu | default(1500) }}

      [VLAN]
      Id={{ all_net.mgmt.vlan }}

  - SAN: |
      [NetDev]
      Name=SAN
      Kind=bridge
      MTUBytes={{ all_net.san.mtu | default(1500) }}

  - VM: |
      [NetDev]
      Name=VM
      Kind=bridge
      MTUBytes={{ all_net.vm.mtu | default(1500) }}

  - NOINET: |
      [NetDev]
      Name=NOINET
      Kind=bridge
      MTUBytes={{ all_net.noinet.mtu | default(1500) }}

  - GENERAL: |
      [NetDev]
      Name=GENERAL
      Kind=bridge
      MTUBytes={{ all_net.general.mtu | default(1500) }}

  - MGMT: |
      [NetDev]
      Name=MGMT
      Kind=bridge
      MTUBytes={{ all_net.mgmt.mtu | default(1500) }}

networkd_config:
  - bond0: |
      [Match]
      Name=bond0

      [Network]
      {% for vid in all_net | dict2items | map(attribute='value') | selectattr('vlan', 'defined') | map(attribute='vlan') | sort %}
      VLAN=bond0.{{ vid }}
      {% endfor %}
      LinkLocalAddressing=no
      IPv6AcceptRA=no

  - bond0.2: |
      [Match]
      Name=bond0.{{ all_net.san.vlan }}

      [Network]
      Bridge=SAN

  - bond0.10: |
      [Match]
      Name=bond0.{{ all_net.vm.vlan }}

      [Network]
      Bridge=VM

  - bond0.20: |
      [Match]
      Name=bond0.{{ all_net.noinet.vlan }}

      [Network]
      Bridge=NOINET

  - bond0.50: |
      [Match]
      Name=bond0.{{ all_net.general.vlan }}

      [Network]
      Bridge=GENERAL

  - bond0.100: |
      [Match]
      Name=bond0.{{ all_net.mgmt.vlan }}

      [Network]
      Bridge=MGMT

  - bond0_primary: |
      [Match]
      Name={{ __bond0_primary_iface }}

      [Network]
      Description=Trunk bond interface primary
      Bond=bond0
      PrimarySlave=true

  - bond0_backup: |
      [Match]
      Name={{ __bond0_backup_iface }}

      [Network]
      Description=Trunk bond interface secondary
      Bond=bond0

  - SAN: |
      [Match]
      Name=SAN

      [Network]
      Address={{ __host_ips.san }}

      [Route]
      Scope=link

  - VM: |
      [Match]
      Name=VM

      [Network]
      Address={{ __host_ips.vm }}

      [Route]
      Scope=link

  - NOINET: |
      [Match]
      Name=NOINET

      [Network]
      Address={{ __host_ips.noinet }}

      [Route]
      Scope=link

  - GENERAL: |
      [Match]
      Name=GENERAL

      [Network]
      Address={{ __host_ips.general }}
      {% if __general_dns %}
      DNS={{ home_net.general.cidr | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}
      DNS=1.1.1.1
      DNS=8.8.8.8
      {% endif %}

      [Route]
      {% if __general_route %}
      {{ __general_route }}
      {% else %}
      Scope=link
      {% endif %}

  - MGMT: |
      [Match]
      Name=MGMT

      [Network]
      Address={{ __host_ips.mgmt }}
      {% if __mgmt_dns %}
      DNS={{ all_net.mgmt.cidr | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}
      DNS=1.1.1.1
      DNS=8.8.8.8
      {% endif %}

      [Route]
      Gateway={{ all_net.mgmt.cidr | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}
      Metric={{ __mgmt_metric }}
