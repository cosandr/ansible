---

__host_num: "{{ ansible_host.rsplit('.', 1)[-1] }}"

home_net:
  vm:
    cidr: "10.0.10.0/24"
    cidr6: "fd00:10::0/64"
    vlan: 10
  general:
    cidr: "10.0.50.0/24"
    cidr6: "fd00:50::0/64"
    vlan: 50
  mgmt:
    cidr: "10.0.100.0/24"
    cidr6: "fd00:100::0/64"
    vlan: 100

internal_net:
  san:
    cidr: "10.0.2.0/24"
    cidr6: "fd00:2::0/64"
    vlan: 2
    mtu: 9000
  noinet:
    cidr: "10.0.20.0/24"
    cidr6: "fd00:20::0/64"
    vlan: 20

wg_net:
  mt:
    cidr: "10.4.20.0/24"
    cidr6: "fd00:4:20::0/64"

all_net: "{{ home_net | combine(internal_net) | combine(wg_net) }}"

ceph_nfs_vip:
  # 10.0.50.20/24
  general: "{{ all_net.general.cidr | ansible.utils.ipaddr('20') }}"
  # 10.0.2.200/24
  san: "{{ all_net.san.cidr | ansible.utils.ipaddr('200') }}"
  # 10.0.10.210/24
  vm: "{{ all_net.vm.cidr | ansible.utils.ipaddr('210') }}"

ceph_nfs_vip_address: >-
  {%- set tmp = {} -%}
  {%- for k, v in ceph_nfs_vip.items() -%}
  {{- tmp.update({k: v | ansible.utils.ipaddr('address')}) -}}
  {%- endfor -%}
  {{ tmp }}

kube_vip_address: "{{ home_net.vm.cidr | ansible.utils.ipaddr('50') | ansible.utils.ipaddr('address') }}"
kube_net: "10.85.0.0/16"
kube_subnet:
  svc:
    # 10.85.0.0/18
    cidr: "{{ kube_net | ansible.utils.ipsubnet(18, 0) }}"
  pod:
    # 10.85.64.0/18
    cidr: "{{ kube_net | ansible.utils.ipsubnet(18, 1) }}"
  lb:
    # 10.85.128.0/26
    cidr: "{{ kube_net | ansible.utils.ipsubnet(26, 512) }}"
  monitoring:
    # 10.85.128.64/26
    cidr: "{{ kube_net | ansible.utils.ipsubnet(26, 513) }}"

# These do not necessarily exist, but are useful for automation
host_ips: >-
  {%- set tmp = {} -%}
  {%- for k, v in all_net.items() -%}
  {{- tmp.update({k: v.cidr | ansible.utils.ipaddr(__host_num) | ansible.utils.ipaddr('address')}) -}}
  {%- endfor -%}
  {{ tmp }}
