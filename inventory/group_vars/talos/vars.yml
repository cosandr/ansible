---

host_num: "{{ groups[(host_subnet == 'control_plane') | ternary('talos_cp', 'talos_worker')] | ansible.utils.index_of('eq', inventory_hostname) }}"

__host_ips_3:
  san: "{{ subnets.san.talos | ansible.utils.ipv4 | andrei.utils.ipaddr_concat(groups['talos'] | ansible.utils.index_of('eq', inventory_hostname)) }}"

# https://github.com/siderolabs/talos/releases
talos_version: "1.9.5"
# https://kubernetes.io/releases/
kube_version: "1.31.6"

talos_schedule_on_control_plane: true
talos_kubeprism_enabled: true
talos_kubeproxy_enabled: false
talos_kubeproxy_mode: ipvs
kube_proxy_enabled: false
kube_api_server: "{{ domain }}"
kube_ingress_domain: "{{ domain }}"

# https://www.talos.dev/v1.9/talos-guides/install/boot-assets/#image-factory
# customization:
#     extraKernelArgs:
#         - console=ttyS0
#     systemExtensions:
#         officialExtensions:
#             - siderolabs/qemu-guest-agent
#             - siderolabs/i915
__igpu_talos_schematic: 2ef6d3a39f4f5eb2782fcf5f398b406ff676dc0e026810eb11f7f7c756f7e28c
# customization:
#     extraKernelArgs:
#         - console=ttyS0
#     systemExtensions:
#         officialExtensions:
#             - siderolabs/qemu-guest-agent
#             - siderolabs/nvidia-container-toolkit-production
#             - siderolabs/nvidia-open-gpu-kernel-modules-production
__nvidia_talos_schematic: b9495ca70e959bf5f5336a9ac70d9b46e468dbde7b53599c45b6d51d2c79920e
talos_schematic: "{{ (vm_host in groups['ms01']) | ternary(__igpu_talos_schematic, __nvidia_talos_schematic) }}"
talos_image: "factory.talos.dev/installer/{{ talos_schematic }}:v{{ talos_version }}"

talos_kubectl_context: "admin@{{ kube_api_server }}"

# Keep disabled for security, I guess
enable_admin_pods: false

node_labels: >-
  {%- set tmp = {
    "cluster-type": 'talos',
    "cpu-tier": hostvars[vm_host].cpu_tier | string,
    "vm-host": vm_host
  } -%}
  {%- if host_subnet == 'worker' -%}
  {{- tmp.update({"node-role.kubernetes.io/worker": ""}) -}}
  {%- endif -%}
  {%- if __igpu_vm_pci_devices == vm_pci_devices -%}
  {{- tmp.update({"intel.feature.node.kubernetes.io/gpu": "true"}) -}}
  {%- endif -%}
  {%- if __nvidia_vm_pci_devices == vm_pci_devices -%}
  {{- tmp.update({"nvidia.com/gpu.present": "true"}) -}}
  {%- endif -%}
  {{ tmp }}

# Skip for now
prometheus_blackbox_icmp_targets: []
prometheus_node_targets: []

pss_privileged_labels:
  pod-security.kubernetes.io/enforce: privileged
  pod-security.kubernetes.io/audit: privileged
  pod-security.kubernetes.io/warn: privileged
