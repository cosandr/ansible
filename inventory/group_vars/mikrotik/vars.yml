---

ansible_user: admin
ansible_connection: ansible.netcommon.network_cli
ansible_network_os: community.routeros.routeros
ansible_network_cli_ssh_type: libssh

api_username: ansible
api_password: "{{ lookup('community.general.passwordstore', 'network/mt_ansible_pass') }}"

prometheus_blackbox_icmp_targets: []
prometheus_node_targets: []

host_ips:
  mgmt: "{{ ansible_host }}"

mt_admin_allowed_addresses: "{{ firewall_trusted_sources + [all_net.mgmt.cidr] }}"

mt_logging_actions: >-
  {%- set tmp = [] -%}
  {%- for h in groups['prom'] -%}
  {{- tmp.append({
    "name": h,
    "remote": hostvars[h].ansible_host,
    "remote-port": 514,
    "target": "remote",
    "src-address": host_ips.mgmt,
    "bsd-syslog": true,
  }) -}}
  {%- endfor -%}
  {{ tmp }}

__mt_logging_manual:
  - topics: info
  - topics: error
  - topics: warning
  - action: echo
    topics: critical

__mt_logging_auto: >-
  {%- set tmp = [] -%}
  {%- for h in groups['prom'] -%}
  {%- for topic in ['info', 'warning', 'error', 'critical'] -%}
  {{- tmp.append({
    "action": h,
    "topics": topic,
  }) -}}
  {%- endfor -%}
  {%- endfor -%}
  {{ tmp }}

mt_logging: "{{ __mt_logging_manual + __mt_logging_auto }}"

mt_graphing_resources:
  - allow-address: "{{ all_net.general.cidr }}"
    store-on-disk: false

mt_ip_routes:
  - gateway: "{{ hostvars['rb5009'].host_ips.mgmt }}"

__mt_ip_addresses_auto: >-
  {%- set tmp = [] -%}
  {%- for name, ip in (host_ips | default({})).items() if name in all_net and name not in wg_net -%}
  {{- tmp.append({
    'interface': name | upper,
    'address': ip + '/' + all_net[name].cidr | ansible.utils.ipaddr('prefix') | string,
  }) -}}
  {%- endfor -%}
  {%- if wireguard_addresses | default([]) | ansible.utils.ipv4 and mt_wg_interfaces | default([]) -%}
  {{- tmp.append({
    'interface': mt_wg_interfaces[0].name,
    'address': wireguard_addresses | ansible.utils.ipv4 | first,
  }) -}}
  {%- endif -%}
  {{ tmp }}

__mt_ipv6_addresses_auto: >-
  {%- set tmp = [] -%}
  {%- for name, ip in (host_ips6 | default({})).items() if name in all_net and name not in wg_net -%}
  {{- tmp.append({
    'interface': name | upper,
    'address': ip + '/' + all_net[name].cidr6 | ansible.utils.ipaddr('prefix') | string,
    'advertise': false,
  }) -}}
  {%- endfor -%}
  {%- if wireguard_addresses | default([]) | ansible.utils.ipv6 and mt_wg_interfaces | default([]) -%}
  {{- tmp.append({
    'interface': mt_wg_interfaces[0].name,
    'address': wireguard_addresses | ansible.utils.ipv6 | first,
    'advertise': false,
  }) -}}
  {%- endif -%}
  {{ tmp }}

mt_ip_addresses: "{{ (__mt_ip_addresses_manual | default([])) + __mt_ip_addresses_auto }}"
mt_ipv6_addresses: "{{ (__mt_ipv6_addresses_manual | default([])) + __mt_ipv6_addresses_auto }}"
