---

__prom_blackbox_http_targets: >-
  {%- set tmp = [] -%}
  {%- for h in groups[__prom_auto_target_group] if hostvars[h].prometheus_blackbox_http_targets | default([]) -%}
  {{- tmp.append(hostvars[h].prometheus_blackbox_http_targets) -}}
  {%- endfor -%}
  {{ tmp | flatten | unique | sort }}

__prom_blackbox_tls_configs: >-
  {%- set tmp = [] -%}
  {%- for h in groups[__prom_auto_target_group] if hostvars[h].prometheus_blackbox_tls_targets | default([]) -%}
  {{- tmp.append(
    {
      "targets": hostvars[h].prometheus_blackbox_tls_targets,
      "labels": hostvars[h].prometheus_node_labels,
    }
  ) -}}
  {%- endfor -%}
  {{ tmp }}

__prom_blackbox_starttls_configs: >-
  {%- set tmp = [] -%}
  {%- for h in groups[__prom_auto_target_group] if hostvars[h].prometheus_blackbox_starttls_targets | default([]) -%}
  {{- tmp.append(
    {
      "targets": hostvars[h].prometheus_blackbox_starttls_targets,
      "labels": hostvars[h].prometheus_node_labels,
    }
  ) -}}
  {%- endfor -%}
  {{ tmp }}

__prom_cadvisor_configs: >-
  {%- set tmp = [] -%}
  {%- for h in groups[__prom_auto_target_group] if hostvars[h].prometheus_cadvisor_targets | default([]) -%}
  {{- tmp.append(
    {
      "targets": hostvars[h].prometheus_cadvisor_targets,
      "labels": hostvars[h].prometheus_node_labels,
    }
  ) -}}
  {%- endfor -%}
  {{ tmp }}

__extra_prometheus_scrape_configs:
  - job_name: 'blackbox_http4'
    scrape_interval: 1m
    metrics_path: '/probe'
    params:
      module: [http_2xx_ipv4]
    static_configs:
      - targets: "{{ __prom_blackbox_http_targets }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: "localhost:{{ blackbox_exporter_port }}"

  - job_name: 'blackbox_tls_connect4'
    scrape_interval: 30m
    metrics_path: '/probe'
    params:
      module: [tls_connect_ipv4]
    static_configs: "{{ __prom_blackbox_tls_configs }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: __host_ip
        regex: '([^:]+):\d+'
      - target_label: __address__
        replacement: "localhost:{{ blackbox_exporter_port }}"

  - job_name: 'blackbox_starttls4'
    scrape_interval: 30m
    metrics_path: '/probe'
    params:
      module: [smtp_starttls_ipv4]
    static_configs: "{{ __prom_blackbox_starttls_configs }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: __host_ip
        regex: '([^:]+):\d+'
      - target_label: __address__
        replacement: "localhost:{{ blackbox_exporter_port }}"

  - job_name: "nvme"
    static_configs: "{{ __prom_nvme_configs }}"

  - job_name: "nextcloud"
    static_configs: "{{ __prom_nextcloud_configs }}"

  - job_name: "pushgateway"
    static_configs:
      - targets: ["localhost:{{ pushgateway_port }}"]
        labels: "{{ prometheus_node_labels }}"

  - job_name: "smartctl"
    scrape_interval: 5m
    static_configs: "{{ __prom_smartctl_configs }}"

  - job_name: "syncthing"
    authorization:
      credentials: "{{ vault_syncthing_token }}"
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
      - targets: ["{{ hostvars['theia'].syncthing_gui_listen_address }}"]
        labels: "{{ hostvars['theia'].prometheus_node_labels }}"

  - job_name: "syncthing_ti"
    authorization:
      credentials: "{{ vault_syncthing_ti_token }}"
    static_configs:
      - targets: ["{{ hostvars['romsto'].ansible_host }}:8384"]
        labels: "{{ hostvars['romsto'].prometheus_node_labels }}"

  - job_name: "hass"
    scrape_interval: 30s
    metrics_path: /api/prometheus
    authorization:
      credentials: "{{ vault_ha_token }}"
    scheme: https
    static_configs:
      - targets: ["ha.{{ domains['hb'] }}:443"]
        labels:
          instance: "ha.{{ domains['hb'] }}"

  - job_name: "hass_ti"
    scrape_interval: 30s
    metrics_path: /api/prometheus
    authorization:
      credentials: "{{ vault_ha_ti_token }}"
    scheme: https
    static_configs:
      - targets: ["ha.{{ domains['ti'] }}:443"]
        labels:
          instance: "ha.{{ domains['ti'] }}"

  - job_name: "ipmi"
    metrics_path: /ipmi
    scrape_interval: 1m
    static_configs:
      - targets: ["localhost:{{ ipmi_exporter_port }}"]
        labels:
          instance: "theia"
          __param_target: "{{ hostvars['theia'].host_ips.ipmi }}"
          __param_module: "theia"
      - targets: ["localhost:{{ ipmi_exporter_port }}"]
        labels:
          instance: "{{ hostvars['romsto'].prometheus_node_labels.instance }}"
          __param_target: "{{ hostvars['romsto'].host_ips.ipmi }}"
          __param_module: "romsto"
      - targets: ["localhost:{{ ipmi_exporter_port }}"]
        labels:
          instance: "{{ hostvars['rhea'].prometheus_node_labels.instance }}"
          __param_target: "{{ hostvars['rhea'].host_ips.ipmi }}"
          __param_module: "rhea"

  - job_name: "nut"
    metrics_path: /ups_metrics
    scrape_interval: 1m
    static_configs:
      - targets: ["{{ hostvars['theia'].host_ips.vm }}:9199"]
        labels:
          instance: "theia"
          ups: "apc"
          __param_ups: "apc"

  - job_name: "mktxp"
    scrape_interval: 5m
    static_configs:
      - targets: ["localhost:{{ mktxp_port }}"]

  - job_name: "postfix"
    scrape_interval: 1m
    static_configs:
      - targets: ["{{ hostvars['webgw01'].wireguard_ip }}:{{ hostvars['webgw01'].postfix_exporter_port }}"]
        labels: "{{ hostvars['webgw01'].prometheus_node_labels }}"

  - job_name: "cadvisor"
    static_configs: "{{ __prom_cadvisor_configs }}"

  - job_name: "aquaero"
    scrape_interval: 30s
    static_configs:
      - targets:
          - "{{ hostvars['desktop'].ansible_host }}:{{ hostvars['desktop'].aquaero_exporter_port }}"
          - "{{ hostvars['desktop'].host_ips.public }}:{{ hostvars['desktop'].aquaero_exporter_port }}"
        labels: "{{ hostvars['desktop'].prometheus_node_labels }}"

  - job_name: "nvidia"
    scrape_interval: 30s
    static_configs:
      - targets: ["{{ hostvars['desktop'].ansible_host }}:{{ hostvars['desktop'].nvidia_exporter_port }}"]
        labels: "{{ hostvars['desktop'].prometheus_node_labels }}"

  - job_name: 'postgres'
    scrape_interval: 60s
    static_configs:
      - targets: ["{{ hostvars['pg01'].ansible_host }}:{{ hostvars['pg01'].postgres_exporter_port }}"]
        labels: "{{ hostvars['pg01'].prometheus_node_labels }}"

  - job_name: 'loki'
    static_configs:
      - targets: ["{{ hostvars['loki01'].ansible_host }}:3100"]
        labels: "{{ hostvars['loki01'].prometheus_node_labels }}"

  - job_name: "elastic"
    static_configs:
      - targets: ["{{ hostvars['gitea01'].ansible_host }}:{{ hostvars['gitea01'].elastic_exporter_port }}"]
        labels: "{{ hostvars['gitea01'].prometheus_node_labels }}"

  - job_name: 'nginx'
    scrape_interval: 60s
    static_configs: "{{ __prom_nginx_configs }}"

  - job_name: minio
    scrape_interval: 1m
    authorization:
      # mc admin prometheus generate local
      credentials: "{{ vault_minio_token }}"
    metrics_path: /minio/v2/metrics/cluster
    static_configs:
      - targets: ["{{ hostvars['theia'].host_ips.vm }}:{{ hostvars['theia'].minio_server_port }}"]

  - job_name: rest_server
    basic_auth:
      username: metrics
      password: "{{ hostvars['theia'].restic_server_users['metrics'] }}"
    scheme: https
    tls_config:
      ca: "{{ lookup('file', hostvars['theia'].ca_publickey_path) }}"
    static_configs:
      - targets: ["{{ hostvars['theia'].host_ips.vm }}:{{ hostvars['theia'].restic_server_port }}"]
        labels: "{{ hostvars['theia'].prometheus_node_labels }}"
