---

proxy_hosts: >-
  {%- set tmp = [] -%}
  {%- for h in groups['webgw'] | difference(groups['rom']) -%}
  {{- tmp.append(hostvars[h].wireguard_ip | default(hostvars[h].ansible_host)) -}}
  {%- endfor -%}
  {{ tmp }}

smartd_email: "{{ my_email }}"
# Send from root domain
smartd_from_address: "{{ inventory_hostname }}@{{ domain | community.dns.get_registrable_domain }}"
# Monitor all drives, send an email if there's a problem, don't run if drive is in standby
# Run short self-test every Friday starting at 01:00 with 1 hour staggering
# Run long self-test every month on the 1st starting at 03:00 with 5 hours staggering
# No error log reporting for NVMe drives
smartd_config: |
  DEFAULT -m {{ smartd_email }} -M exec /usr/local/bin/smartdnotify -n standby,15,q -s (S/../../5/01:001|L/../01/./03:005)
  {% for d in ansible_devices.keys() if d.startswith('nvme') %}
  /dev/{{ d }} -H -f -t -l selftest -l selfteststs
  {% endfor %}
  DEVICESCAN -a

# Fetch with timedatectl -p Timezone --value show
sys_timezone: "Europe/Oslo"

ssh_authorized_keys:
  - "{{ hostvars['desktop'].ssh_keys.andrei }}"
  - "{{ hostvars['laptop'].ssh_keys.andrei }}"

domain: "{{ all_net[host_net].domain | default(domains['hb']) }}"

btrfs_scrub_email: "{{ smartd_email }}"
btrfs_scrub_from_email: "{{ smartd_from_address }}"

gitlab_registry_basename: "registry.{{ domains['dv'] }}"
gitlab_external_url: "https://gitlab.{{ domains['dv'] }}"
gitlab_registry_external_url: "https://{{ gitlab_registry_basename }}"

my_user_pass: "{{ vault_my_user_pass }}"

btrfs_root: "/mnt/btrfs_root"
btrfs_opts: "compress=zstd:3,space_cache=v2"
root_pass_hash: "{{ lookup('community.general.passwordstore', 'ansible/server_root_hash') }}"

smartctl_exporter_port: 9633
smartctl_exporter_listen_address: "{{ host_ips.vm | default(ansible_host) }}:{{ smartctl_exporter_port }}"
