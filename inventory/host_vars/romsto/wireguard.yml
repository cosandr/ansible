---

wireguard_port: "51820"
wireguard_interface: "wg0"
wireguard_addresses:
  - "{{ wireguard_ip }}/{{ wg_net[host_wg_net].cidr | ansible.utils.ipaddr('prefix') | string }}"

wireguard_mt_allowed_ips:
  - "{{ hostvars['rb5009'].wireguard_ip }}/32"
  - "{{ hostvars['drepi'].ansible_host }}/32"
  - "{{ hostvars['prom01'].ansible_host }}/32"
  - "{{ hostvars['theia'].host_ips.vm }}/32"
  - "{{ hostvars['loki01'].ansible_host }}/32"

mt_wg_allowed_addresses:
  - "{{ wireguard_addresses | ansible.utils.ipaddr('address') | ansible.utils.ipaddr('host') }}"
  - "10.1.0.0/24"

wireguard_address: "{{ wireguard_addresses | join(', ') }}"
wireguard_private_key: "{{ lookup('community.general.passwordstore', 'network/' + inventory_hostname + '_wg_pk') }}"
wireguard_public_key: "{{ vault_wireguard_public_key }}"
wireguard_endpoint: "{{ vault_wireguard_endpoint }}"

wireguard_unmanaged_peers:
  mt:
    endpoint: "{{ hostvars['rb5009'].wireguard_endpoint }}"
    allowed_ips: "{{ wireguard_mt_allowed_ips | join(', ') }}"
    public_key: "{{ hostvars['rb5009'].wireguard_public_key }}"
    preshared_key: "{{ lookup('community.general.passwordstore', 'network/' + inventory_hostname + '_wg_psk_mt') }}"
    persistent_keepalive: "{{ wireguard_persistent_keepalive }}"
  webgw:
    endpoint: "{{ hostvars['webgw01'].wireguard_endpoint }}"
    allowed_ips: "{{ hostvars['webgw01'].wireguard_ip }}/32"
    public_key: "{{ hostvars['webgw01'].wireguard_public_key }}"
    preshared_key: "{{ lookup('community.general.passwordstore', 'network/webgw01_wg_psk_romsto') }}"
    persistent_keepalive: "{{ wireguard_persistent_keepalive }}"

wireguard_persistent_keepalive: 300
wireguard_postup:
  - "logger -t wireguard 'Tunnel WireGuard-{{ wireguard_interface }} started';/usr/local/emhttp/webGui/scripts/update_services"
  - "iptables -t nat -A POSTROUTING -s {{ wg_net.mt.cidr }} -o br0 -j MASQUERADE"
  - "ip -4 route flush table 200"
  - "ip -4 route add default via {{ wireguard_ip }} dev {{ wireguard_interface }} table 200"
  - "ip -4 route add 10.1.0.0/24 via 10.1.0.1 dev br0 table 200"
wireguard_postdown:
  - "logger -t wireguard 'Tunnel WireGuard-{{ wireguard_interface }} stopped';/usr/local/emhttp/webGui/scripts/update_services"
  - "iptables -t nat -D POSTROUTING -s {{ wg_net.mt.cidr }} -o br0 -j MASQUERADE"
  - "ip -4 route flush table 200"
  - "ip -4 route add unreachable default table 200"
  - "ip -4 route add 10.1.0.0/24 via 10.1.0.1 dev br0 table 200"
