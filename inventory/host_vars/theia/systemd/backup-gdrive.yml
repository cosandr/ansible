---

__sd_backup_gdrive:
  name: backup-gdrive
  service:
    content: |
      [Unit]
      Description=Backup important files to Google Drive
      After=network-online.target mnt-tank.mount mnt-ceph.mount
      Requires=network-online.target mnt-tank.mount mnt-ceph.mount
      ConditionPathExists=/mnt/tank/backup

      [Service]
      Type=simple
      ExecStart={{ systemd_script_install_path }}/backup-gdrive

      [Install]
      WantedBy=multi-user.target

  # Daily at 05:30
  timer:
    enabled: true
    state: started
    content: |
      [Unit]
      Description=Backup important files to Google Drive timer

      [Timer]
      Persistent=yes
      OnCalendar=*-*-* 05:30:00

      [Install]
      WantedBy=timers.target

  scripts:
    - dest: "{{ systemd_script_install_path }}/backup-gdrive"
      content: |
        #!/bin/sh

        global_exit=0

        rclone() {
          /usr/bin/rclone "$@"
          tmp_exit=$?
          global_exit=$(( tmp_exit > global_exit ? tmp_exit : global_exit ))
        }

        rclone sync -v --exclude-if-present .rclone_ignore /mnt/tank/backup gsecret:tank-backup

        rclone sync -v /mnt/tank/archive/savegames gcrypt:savegames
        rclone sync -v nextcloud: gcrypt:Nextcloud

        # Find latest pgbackrest backup
        latest_pg_full="$(find /mnt/tank/backup/pgbackrest/backup/main -maxdepth 1 -type d -name '*F' -exec basename {} \; | sort -rn | head -n1)"
        rclone sync -v --include "$latest_pg_full*/**" /mnt/tank/backup/pgbackrest/backup/main gsecret:pgbackrest

        # Find latest {{ hostvars['docker01'].vm_host }} backup
        latest_docker="$(find /mnt/tank/backup/btrbk/{{ hostvars['docker01'].vm_host }} -maxdepth 1 -type d -name 'libvirt*' | sort -rn | head -n1)"
        if ! grep -q /tmp/docker01-data /proc/mounts && [ -f "$latest_docker"/docker01-data01.raw ]; then
          trap 'umount /tmp/docker01-data' EXIT
          mkdir -p /tmp/docker01-data
          mount -o ro,noload,noatime "$latest_docker"/docker01-data01.raw /tmp/docker01-data
          tmp_exit=$?
          global_exit=$(( tmp_exit > global_exit ? tmp_exit : global_exit ))
        fi
        if [ -d /tmp/docker01-data/syncthing/data ]; then
          rclone sync -v /tmp/docker01-data/syncthing/data gsecret:syncthing
        fi

        exit $global_exit
