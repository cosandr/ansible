{{ ansible_managed | comment }}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name admin.{{ domain }};
    large_client_header_buffers 4 16k;

    ssl_certificate {{ nginx_ssl_cert_main }};
    ssl_certificate_key {{ nginx_ssl_key_main }};

    include proxy_params;
    access_log {{ nginx_sites_logs }}/access-admin.{{ domain }}.log {{ nginx_access_log_options }};
    error_log {{ nginx_sites_logs }}/error-admin.{{ domain }}.log {{ nginx_error_log_options }};

    auth_request /vouch-validate;

    location = /vouch-validate {
        {{ nginx_vouch_conf | indent(8) }}
    }

    error_page 401 = @error401;

    # If the user is not logged in, redirect them to Vouch's login URL
    location @error401 {
        return 302 https://login.{{ domain }}/login?url=https://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;
    }

    location / {
        return 404;
    }

    location /motion/ {
        proxy_pass http://motion/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
{% if nginx_upstreams | selectattr('name', 'search', 'transmission') %}
    location /transmission {
        proxy_pass          http://transmission;
        proxy_redirect      off;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    }
{% endif %}
{% if nginx_upstreams | selectattr('name', 'search', 'sonarr') %}
    location /sonarr {
        proxy_pass        http://sonarr;
        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  Host              $host;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_redirect    off;
        proxy_buffering   off;
    }
{% endif %}
{% if nginx_upstreams | selectattr('name', 'search', 'firefox') %}
    location = /firefox {return 301 $scheme://$http_host/firefox/;}
	location /firefox/ {
		proxy_pass http://firefox/;
		location /firefox/websockify {
			proxy_pass http://firefox/websockify/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection upgrade;
			proxy_read_timeout 86400;
		}
	}
{% endif %}
{% if nginx_upstreams | selectattr('name', 'search', 'vscode') %}
    location /vscode/ {
        proxy_pass http://vscode/;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_set_header Accept-Encoding gzip;
    }
{% endif %}
}
