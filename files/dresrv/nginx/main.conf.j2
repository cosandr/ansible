{{ ansible_managed | comment }}
# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name git.{{ domain }}
                login.{{ domain }}
                gitlab.{{ domain }}
                registry.{{ domain }}
                *.{{ domain }};
    return 301 https://$host$request_uri;
}

# Redirect root domain to www
server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ domain }};

    ssl_certificate {{ nginx_ssl_cert_main }};
    ssl_certificate_key {{ nginx_ssl_key_main }};

    return 301 https://www.{{ domain }}$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.{{ domain }};

    ssl_certificate {{ nginx_ssl_cert_main }};
    ssl_certificate_key {{ nginx_ssl_key_main }};

    root {{ web_root }}/main;
    index index.html index.php index.cgi;

    access_log {{ nginx_sites_logs }}/access-www.{{ domain }}.log {{ nginx_access_log_options }};
    error_log {{ nginx_sites_logs }}/error-www.{{ domain }}.log {{ nginx_error_log_options }};

    location ~ \.php$ {
        include /etc/nginx/fastcgi_params;
        fastcgi_pass php-fpm;
        # fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location / {
        try_files $uri $uri/ $uri.html $uri.php$is_args$query_string;
    }

    # Disable hidden files
    location ~ /\. {
        deny all;
        return 403;
    }

    # Block private
    location /private {
        deny all;
        return 403;
    }

    location /pip {
        alias {{ pip_wheel_dir | default(web_root + '/pip') }};
        autoindex on;
    }

    location /discord/upload {
        alias {{ web_root }}/main/discord;

        auth_basic "Restricted";
        auth_basic_user_file  /etc/nginx/discord_upload.htaccess;

        dav_methods PUT DELETE;
        dav_ext_methods PROPFIND;

        dav_access user:rw group:rw all:r;
        client_max_body_size 1G;
        create_full_put_path off;
        client_body_temp_path /var/www/dav-temp;
        autoindex on;
    }

{% if nginx_upstreams | selectattr('name', 'search', 'notes_web') %}
    location ^~ /standardnotes-extensions {
		autoindex off;
		alias /var/www/standardnotes-extensions/;
		# CORS HEADERS
		if ($request_method = 'OPTIONS') {
		   add_header 'Access-Control-Allow-Origin' '*';
		   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		   #
		   # Custom headers and headers various browsers *should* be OK with but aren't
		   #
		   add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		   #
		   # Tell client that this pre-flight info is valid for 20 days
		   #
		   add_header 'Access-Control-Max-Age' 1728000;
		   add_header 'Content-Type' 'text/plain; charset=utf-8';
		   add_header 'Content-Length' 0;
		   return 204;
		}
		if ($request_method = 'POST') {
		   add_header 'Access-Control-Allow-Origin' '*';
		   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		   add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		   add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
		if ($request_method = 'GET') {
		   add_header 'Access-Control-Allow-Origin' '*';
		   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		   add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		   add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
	}
{% endif %}
}
