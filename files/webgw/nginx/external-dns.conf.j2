{{ ansible_managed | comment }}
{% set domain = domains['hb'] %}
server {
    {{ nginx_listen_http | indent(4) }}
    server_name external-dns.{{ domain }};
    return 301 https://$host$request_uri;
}

server {
    {{ nginx_listen_https | indent(4) }}
    http2 on;
    server_name external-dns.{{ domain }};

    ssl_certificate /etc/lego/certificates/{{ domain }}.crt;
    ssl_certificate_key /etc/lego/certificates/{{ domain }}.key;

    access_log {{ nginx_sites_logs }}/access-external-dns.{{ domain }}.log {{ nginx_access_log_options }};
    error_log {{ nginx_sites_logs }}/error-external-dns.{{ domain }}.log {{ nginx_error_log_options }};

    proxy_ssl_trusted_certificate /etc/pki/tls/certs/mt-ca.crt;
    # TODO: on doesn't work, not sure why
    proxy_ssl_verify off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # https://github.com/mirceanton/external-dns-provider-mikrotik/blob/1074c11af9eca6810eac865a23debbd042c7a2ed/internal/mikrotik/client.go#L61
    location /rest/system/resource {
        # TODO: Own subnet for external-dns?
        {{ subnets.talos.pod | map('regex_replace', '(.+)', 'allow \\1;') | join('\n') }}
        deny all;
        limit_except GET {
            deny all;
        }
        proxy_pass https://{{ hostvars['rb5009'].ansible_host }}/rest/system/resource;
    }

    location /rest/ip/dns/static {
        {{ subnets.talos.pod | map('regex_replace', '(.+)', 'allow \\1;') | join('\n') }}
        deny all;
        limit_except GET PUT DELETE {
            deny all;
        }
        proxy_pass https://{{ hostvars['rb5009'].ansible_host }}/rest/ip/dns/static;
    }

    location / {
        return 403;
    }
}
