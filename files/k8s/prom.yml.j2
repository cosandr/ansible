{% set kube_proxy_enabled = (talos_kubeproxy_enabled | default(true)) or (not calico_bpf_enabled | default(false)) %}
---

alertmanager:
  enabled: false
grafana:
  enabled: false
prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - "prom.{{ kube_ingress_domain }}"
    paths:
      - /
    pathType: ImplementationSpecific

  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    externalLabels: {}
    externalUrl: "http://prom.{{ kube_ingress_domain }}"
    retention: 1h
    storageSpec:
      emptyDir:
        sizeLimit: "512Mi"
prometheus-node-exporter:
  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
# permission denied
{% if 'talos' not in group_names %}
    - --collector.systemd
  extraHostVolumeMounts:
    - name: systemd
      hostPath: /run/dbus/system_bus_socket
      mountPath: /var/run/dbus/system_bus_socket
      readOnly: true
      mountPropagation: None
{% endif %}
{% if 'talos' in group_names %}
kubeControllerManager:
  service:
    selector:
      k8s-app: kube-controller-manager

kubeScheduler:
  service:
    selector:
      k8s-app: kube-scheduler
{% endif %}

kubeProxy:
  enabled: {{ kube_proxy_enabled }}

defaultRules:
  disabled:
    Watchdog: true
  rules:
    kubeProxy: {{ kube_proxy_enabled }}
