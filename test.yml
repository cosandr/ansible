---
- name: Test Playbook
  gather_facts: true
  check_mode: true
  diff: yes
  hosts: all
  vars_files: 
    - .secrets/vars.yml
    - host_vars/server.yml
  vars:
    nginx_upstreams: []
  tasks:
    # - name: "Ansible | List all known variables and facts"
    #   debug:
    #     var: hostvars[inventory_hostname]
    - name: Merge ports
      set_fact:
        ports: "{{ ports | combine(_ports, recursive=true) }}"
    - block:
      - name: "Docker ports"
        debug:
          var: ansible_local.docker.ports

      - name: Merge Docker ports
        set_fact:
          ports: "{{ ports | combine(ansible_local.docker.ports, recursive=true) }}"
    
      when: ansible_local is defined and ansible_local.docker is defined and ansible_local.docker.ports is defined

    - name: "All ports"
      debug:
        var: ports
    
    - name: Include vars
      include_vars: "roles/nginx/vars/{{ ansible_os_family }}.yml"
    
    - name: Create mapping of managed sites
      set_fact:
        nginx_managed_sites: "{{ nginx_managed_sites|default({}) | combine( { 'ansible-' + item | basename | regex_replace('(.*)\\.j2$', '\\1'): item } ) }}"
      loop: "{{ lookup('fileglob', 'roles/nginx/templates/sites/*', wantlist=True) }}"
    
    - name: List of existing managed sites
      set_fact:
        check_sites_exist: "{{ check_sites_exist|default([]) + [ item | basename ] }}"
      loop: "{{ lookup('fileglob', nginx_vhost_path + '/ansible-*', wantlist=True) }}"
    
    - block:
      - name: Delete old managed sites
        debug:
          msg: "{{ nginx_vhost_path }}/{{ item }}"
        when: item not in nginx_managed_sites
        with_items: "{{ check_sites_exist }}"
      when: check_sites_exist is defined and check_sites_exist | length > 0
    
    - name: dsada
      debug:
        msg: "yes"
      when: ports.cadvisor is defined
