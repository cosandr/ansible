---

desktop_label: "{{ hostvars.desktop.inventory_hostname }}"
laptop_label: "{{ hostvars.laptop.inventory_hostname }}"
drepi_label: "{{ hostvars.drepi.inventory_hostname }}"
server_label: "{{ hostvars.dresrv.inventory_hostname }}"
romsto_label: "RomeoTV"
__dresrv: "{{ hostvars['dresrv'] }}"
__prom_node_group: "servers"

__exclude_auto_node: "{{ __exclude_auto_node_tmp | flatten }}"
__exclude_auto_node_tmp:
  - dresrv
  - drepi
  - romsto
  - theia
  - oldpi
  - "{{ groups['k8s_cluster'] }}"

__prom_node_ips: >-
  {%- set tmp = [] -%}
  {%- for h in groups['prom'] -%}
  {{- tmp.append(hostvars[h].wireguard_ip | default(hostvars[h].ansible_host)) -}}
  {%- endfor -%}
  {{ tmp }}

prometheus_version: latest
prometheus_port: 9090
prometheus_storage_retention: "365d"
prometheus_config_flags_extra:
  # Compaction must be disabled for Thanos to work
  "storage.tsdb.min-block-duration": "2h"
  "storage.tsdb.max-block-duration": "2h"
prometheus_web_listen_address: "0.0.0.0:{{ prometheus_port }}"
prometheus_web_external_url: "http://{{ wireguard_ip | default(ansible_host) }}:{{ prometheus_port }}"
prometheus_global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s

prometheus_alertmanager_config:
  - static_configs:
      - targets: "{{ __prom_node_ips | map('regex_replace', '$', ':' + (alertmanager_port | string)) | list }}"

prometheus_node_static_config:
  - targets: ["{{ __dresrv.ansible_host }}:{{ __dresrv.node_exporter_port }}"]
    labels:
      instance: "{{ server_label }}"

  - targets: ["{{ hostvars['desktop'].ansible_host }}:{{ hostvars['desktop'].node_exporter_port }}"]
    labels:
      instance: "{{ desktop_label }}"

  - targets: ["{{ hostvars['drepi'].ansible_host }}:{{ hostvars['drepi'].node_exporter_port }}"]
    labels:
      instance: "{{ drepi_label }}"

  - targets: ["{{ hostvars['theia'].host_ips.vm }}:9100"]
    labels:
      instance: "{{ hostvars['theia'].inventory_hostname }}"

  - targets: ["{{ hostvars['romsto'].ansible_host }}:{{ hostvars['romsto'].node_exporter_port }}"]
    labels:
      instance: "{{ romsto_label }}"

# Appended at runtime
blackbox_exporter_targets_icmp_ipv4:
  - "google.com"
  - "1.1.1.1"
  - "{{ hostvars['romsto'].ddns_domain }}"
  - "{{ hostvars['romsto'].wireguard_ip }}"
  - "{{ hostvars['webgw01'].ansible_host }}"
  # Home assistant
  - "10.0.50.48"

blackbox_exporter_targets_http_ipv4:
  - "https://google.com"
  - "https://{{ grafana_domain }}"
  - "https://ha.hlab.no"
  - "https://gitlab.{{ hostvars['gitlab01'].domain }}"

blackbox_exporter_targets_tls_ipv4:
  - "{{ hostvars['drepi'].postfix_hostname }}:465"

blackbox_exporter_targets_starttls_ipv4:
  - "{{ hostvars['drepi'].postfix_hostname }}:587"

__prom_am_configs: >-
  {%- set tmp = [] -%}
  {%- for h in groups['prom'] -%}
  {{- tmp.append(
    {
      "targets": [hostvars[h].wireguard_ip | default(hostvars[h].ansible_host) + ":" + hostvars[h].alertmanager_port | string],
      "labels": {
        "instance": hostvars[h].inventory_hostname
      }
    }
  ) -}}
  {%- endfor -%}
  {{ tmp }}

__prom_prom_configs: >-
  {%- set tmp = [] -%}
  {%- for h in groups['prom'] -%}
  {{- tmp.append(
    {
      "targets": [hostvars[h].wireguard_ip | default(hostvars[h].ansible_host) + ":" + hostvars[h].prometheus_port | string],
      "labels": {
        "instance": hostvars[h].inventory_hostname
      }
    }
  ) -}}
  {%- endfor -%}
  {{ tmp }}

__prom_node_configs: >-
  {%- set tmp = [] -%}
  {%- for h in groups[__prom_node_group] | difference(__exclude_auto_node) | sort -%}
  {{- tmp.append(
    {
      "targets": [hostvars[h].wireguard_ip | default(hostvars[h].ansible_host) + ":" + hostvars[h].node_exporter_port | string],
      "labels": {
        "instance": hostvars[h].inventory_hostname
      }
    }
  ) -}}
  {%- endfor -%}
  {{ tmp }}

__prom_blackbox_icmp_targets: >-
  {%- set tmp = [] -%}
  {%- for h in groups[__prom_node_group] | difference(__exclude_auto_node) | sort -%}
  {{- tmp.append(hostvars[h].wireguard_ip | default(hostvars[h].ansible_host)) -}}
  {%- endfor -%}
  {{ tmp }}

prometheus_scrape_configs: "{{ (__common_prometheus_scrape_configs | default([])) + (__extra_prometheus_scrape_configs | default([])) }}"

__common_prometheus_scrape_configs:
  - job_name: "alertmanager"
    static_configs: "{{ __prom_am_configs }}"

  - job_name: "prometheus"
    metrics_path: "{{ prometheus_metrics_path }}"
    static_configs: "{{ __prom_prom_configs }}"

  - job_name: 'blackbox_icmp4'
    metrics_path: '/probe'
    params:
      module: [icmp_ipv4]
    static_configs:
      - targets: "{{ blackbox_exporter_targets_icmp_ipv4 + __prom_blackbox_icmp_targets }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: "localhost:{{ blackbox_exporter_port }}"
      - source_labels: [instance]
        target_label: __host_ip

  - job_name: 'blackbox_tls_connect4'
    scrape_interval: 30m
    metrics_path: '/probe'
    params:
      module: [tls_connect_ipv4]
    static_configs:
      - targets: "{{ blackbox_exporter_targets_tls_ipv4 }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: "localhost:{{ blackbox_exporter_port }}"
      - source_labels: [instance]
        target_label: __host_ip

  - job_name: 'blackbox_starttls4'
    scrape_interval: 30m
    metrics_path: '/probe'
    params:
      module: [smtp_starttls_ipv4]
    static_configs:
      - targets: "{{ blackbox_exporter_targets_starttls_ipv4 }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: "localhost:{{ blackbox_exporter_port }}"
      - source_labels: [instance]
        target_label: __host_ip

  - job_name: "node"
    static_configs: "{{ prometheus_node_static_config + __prom_node_configs }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __host_ip
        regex: '([^:]+):\d+'

__extra_prometheus_scrape_configs:
  - job_name: "federate"
    scrape_interval: 15s

    honor_labels: true
    metrics_path: '/federate'

    params:
      'match[]':
        - '{job=~".+"}'

    static_configs:
      - targets:
        - "{{ hostvars['dresrv'].ansible_host }}:9090"

  - job_name: "ceph"
    scrape_interval: 15s
    honor_labels: true
    static_configs:
      - targets: "{{ groups['ceph'] | map('extract', hostvars, 'ansible_host') | map('regex_replace', '$', ':' + (ceph_exporter_port | string)) | list }}"

  - job_name: "pushgateway"
    static_configs:
      - targets: ["localhost:{{ pushgateway_port }}"]
        labels:
          instance: "{{ inventory_hostname }}"

  - job_name: "hass"
    scrape_interval: 30s
    metrics_path: /api/prometheus

    authorization:
      credentials: "{{ vault_ha_token }}"

    scheme: https
    static_configs:
      - targets: ["ha.{{ domains['hb'] }}:443"]
        labels:
          instance: "ha.{{ domains['hb'] }}"

  - job_name: "hass_ti"
    scrape_interval: 30s
    metrics_path: /api/prometheus

    authorization:
      credentials: "{{ vault_ha_ta_token }}"

    scheme: https
    static_configs:
      - targets: ["ha.{{ domains['ti'] }}:443"]
        labels:
          instance: "ha.{{ domains['ti'] }}"

  - job_name: 'thanos'
    static_configs:
      - targets:
          - "localhost:19191"
          - "localhost:19192"
          - "localhost:19193"
          - "localhost:19194"
    relabel_configs:
      - source_labels: [__address__]
        regex: '.*:(\d+)'
        target_label: instance
        replacement: "{{ inventory_hostname }}:${1}"

      - source_labels: [__address__]
        regex: '.*:19191'
        target_label: thanos_svc
        replacement: "sidecar"

      - source_labels: [__address__]
        regex: '.*:19192'
        target_label: thanos_svc
        replacement: "store"

      - source_labels: [__address__]
        regex: '.*:19193'
        target_label: thanos_svc
        replacement: "compact"

      - source_labels: [__address__]
        regex: '.*:19194'
        target_label: thanos_svc
        replacement: "query"

  - job_name: 'blackbox_http4'
    scrape_interval: 1m
    metrics_path: '/probe'
    params:
      module: [http_2xx_ipv4]
    static_configs:
      - targets: "{{ blackbox_exporter_targets_http_ipv4 }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: "localhost:{{ blackbox_exporter_port }}"

  - job_name: "ipmi"
    metrics_path: /ipmi
    scrape_interval: 1m
    static_configs:
      - targets: ["localhost:{{ ipmi_exporter_port }}"]
        labels:
          instance: "theia"
          __param_target: "theia.ipmi.hlab.no"
          __param_module: "theia"

  - job_name: "mikrotik"
    scrape_interval: 5m
    static_configs:
      - targets: ["localhost:{{ mikrotik_exporter_port }}"]

  - job_name: "postfix"
    scrape_interval: 1m
    static_configs:
      - targets: ["{{ hostvars['drepi'].ansible_host }}:{{ hostvars['drepi'].postfix_exporter_port }}"]

  - job_name: "cadvisor"
    static_configs:
      - targets: ["{{ hostvars['romsto'].ansible_host }}:{{ hostvars['romsto'].cadvisor_port }}"]
        labels:
          instance: "{{ romsto_label }}"

  - job_name: "aquaero"
    scrape_interval: 30s
    static_configs:
      - targets: ["{{ hostvars['desktop'].ansible_host }}:{{ hostvars['desktop'].aquaero_exporter_port }}"]
        labels:
          instance: "{{ desktop_label }}"

  - job_name: "nvidia"
    scrape_interval: 30s
    static_configs:
      - targets: ["{{ hostvars['desktop'].ansible_host }}:{{ hostvars['desktop'].nvidia_exporter_port }}"]
        labels:
          instance: "{{ desktop_label }}"

  - job_name: "fah"
    scrape_interval: 60s
    static_configs:
      - targets: ["{{ hostvars['desktop'].ansible_host }}:{{ hostvars['desktop'].fah_exporter_port }}"]
        labels:
          instance: "{{ desktop_label }}"

  - job_name: "wmi"
    static_configs:
      - targets: ["{{ hostvars['desktop'].ansible_host }}:{{ hostvars['desktop'].wmi_exporter_port }}"]
        labels:
          instance: "{{ desktop_label }}"

  - job_name: "hwinfo"
    static_configs:
      - targets: ["{{ hostvars['desktop'].ansible_host }}:{{ hostvars['desktop'].hwinfo_exporter_port }}"]
        labels:
          instance: "{{ desktop_label }}"

  - job_name: 'postgres'
    scrape_interval: 60s
    static_configs:
      - targets: ["{{ hostvars['pg01'].ansible_host }}:{{ hostvars['pg01'].postgres_exporter_port }}"]
        labels:
          instance: "{{ hostvars['pg01'].inventory_hostname }}"

  - job_name: 'loki'
    static_configs:
      - targets: ["{{ hostvars['loki01'].ansible_host }}:3100"]
        labels:
          instance: "{{ hostvars['loki01'].inventory_hostname }}"

  - job_name: 'nginx'
    scrape_interval: 60s
    static_configs:
      - targets: ['{{ __dresrv.ansible_host }}:{{ __dresrv.nginx_exporter_port }}']
        labels:
          instance: "{{ server_label }}"

      - targets: ["{{ hostvars['webgw01'].wireguard_ip }}:{{ hostvars['webgw01'].nginx_exporter_port }}"]
        labels:
          instance: "{{ hostvars['webgw01'].inventory_hostname }}"

      - targets: ["{{ hostvars['localgw01'].ansible_host }}:{{ hostvars['localgw01'].nginx_exporter_port }}"]
        labels:
          instance: "{{ hostvars['localgw01'].inventory_hostname }}"

      - targets: ["{{ hostvars['romgw01'].wireguard_ip }}:{{ hostvars['romgw01'].nginx_exporter_port }}"]
        labels:
          instance: "{{ hostvars['romgw01'].inventory_hostname }}"

prometheus_alert_rules_files:
  - "{{ inventory_dir }}/files/prometheus/alerts/*.rules"

prometheus_alert_rules: []
