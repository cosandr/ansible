---

__sd_backup_psql:
  name: backup-psql
  service:
    content: |
      [Unit]
      Description=PostgreSQL backup
      After={{ postgresql_daemon }}
      Requires={{ postgresql_daemon }}
      RequiresMountsFor=/mnt/backup-pgsql

      [Service]
      Type=oneshot
      Environment=DIR=/mnt/backup-pgsql/
      Environment=KEEP=3
      Environment=PERMS=640
      Environment=PERMS_USER=root
      Environment=PERMS_GROUP=1000  # my user
      ExecStart={{ systemd_script_install_path }}/backup-psql

      [Install]
      WantedBy=multi-user.target

  # Daily at 03:00
  timer:
    enabled: true
    state: started
    content: |
      [Unit]
      Description=Scheduled PostgreSQL backup

      [Timer]
      Persistent=yes
      OnCalendar=*-*-* 03:00:00

      [Install]
      WantedBy=timers.target

  scripts:
    - dest: "{{ systemd_script_install_path }}/backup-psql"
      content: |
        #!/bin/bash

        DIR=${DIR:-/tank/backup/pgsql}
        KEEP=${KEEP:-5}
        PERMS=${PERMS:-640}
        PERMS_USER=${PERMS_USER:-root}
        PERMS_GROUP=${PERMS_GROUP:-root}
        PG_USER=${PG_USER:-postgres}
        TMPDIR=${TMPDIR:-/tmp/psqlbackup}
        PREFIX=${PREFIX:-$(hostname)}

        DATESTAMP=$(date +%Y%m%d_%H%M)
        FILENAME="${PREFIX}_${DATESTAMP}.gz"

        mkdir -p "${DIR}"
        sudo -u "$PG_USER" mkdir -p "${TMPDIR}"

        cleanup() {
            rm -rf "${TMPDIR}"
        }

        trap cleanup EXIT

        set -e

        sudo -u "$PG_USER" pg_dumpall -c | gzip > "${TMPDIR}/${FILENAME}"

        # remove all backups except the $KEEP latests
        BACKUPS=$(find "${DIR}" -name "${PREFIX}_*.gz" | wc -l | sed 's/\ //g')
        while [ "$BACKUPS" -ge "$KEEP" ]
        do
          ls -tr1 "${DIR}"/"${PREFIX}_"*.gz | head -n 1 | xargs rm -f
          BACKUPS=$(( BACKUPS - 1))
        done

        install -o "$PERMS_USER" -g "$PERMS_GROUP" -m "$PERMS" "${TMPDIR}/${FILENAME}" "${DIR}/"

        echo "Successfully dumped PG data."

        # Restore
        # gunzip -c filename.gz | psql -U postgres

