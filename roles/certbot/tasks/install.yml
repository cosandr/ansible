---

- name: Debian tasks
  block:
    - name: Debian 10 tasks
      block:
        - name: Set Python fact for 3.7
          set_fact:
            __python_bin_path: /usr/bin/python3.7

        - name: Install prerequisites (Debian <=10)
          apt:
            name:
              - python3
              - python3-venv
              - libaugeas0
            update_cache: true
            state: present
      when: ansible_distribution_major_version | int < 11

    - name: Install prerequisites (Debian >=11)
      apt:
        name:
          - python3.9
          - python3.9-venv
          - libaugeas0
        update_cache: true
        state: present
      when: ansible_distribution_major_version | int >= 11

  when: ansible_os_family == 'Debian'
  tags: ["install"]

- name: Install prerequisites (RedHat)
  dnf:
    name:
      - python39
      - augeas-libs
    state: present
  when: ansible_os_family == 'RedHat'
  tags: ["install"]

- name: Install prerequisites (FreeBSD)
  community.general.pkgng:
    name:
      - python39
      - gcc   # Required to compile cryptography
      - rust  # Required to compile cryptography
      - augeas
    state: present
  when: ansible_os_family == 'FreeBSD'
  tags: ["install"]

- name: Setup venv  # noqa package-latest
  pip:
    name:
      - pip
      - setuptools
      - wheel
    umask: "0077"
    state: latest
    virtualenv: "{{ certbot_venv_path }}"
    virtualenv_command: "{{ __python_bin_path }} -m venv"
  tags: ["install"]

# 38 builds from source on Python 3.7
- name: Install cryptography<38 (Debian 10)
  pip:
    name: cryptography<38
    virtualenv: "{{ certbot_venv_path }}"
  when:
    - ansible_os_family == 'Debian'
    - ansible_distribution_major_version | int < 11
  tags: ["install"]

- name: Install certbot
  pip:
    name: "{{ certbot_pkgs + certbot_extra_pkgs }}"
    umask: "0077"
    virtualenv: "{{ certbot_venv_path }}"
  tags: ["install"]

- name: Ensure bin link exists
  file:
    src: "{{ certbot_venv_path }}/bin/certbot"
    dest: "{{ __certbot_bin_path }}"
    state: link
  tags: ["install"]

- name: Configure services if possible
  include_tasks: "{{ item_file }}"
  with_first_found:
    - files: ["{{ ansible_system }}.yml"]
      skip: true
  loop_control:
    loop_var: item_file
  when: certbot_auto_renew | bool
  tags: ["install"]

# Can be used to skip installing if including this role more than once
- name: Set installed fact
  set_fact:
    __certbot_installed: true
  tags: ["install"]
