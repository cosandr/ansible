---

- name: Ensure /etc/letsencrypt exists
  ansible.builtin.file:
    path: "/etc/letsencrypt"
    state: directory
    owner: root
    group: "{{ __root_group }}"
    mode: "0755"

- name: Configure certbot
  ansible.builtin.copy:
    dest: "/etc/letsencrypt/cli.ini"
    owner: root
    group: "{{ __root_group }}"
    mode: "0600"
    content: |
      rsa-key-size = 4096
      email = {{ certbot_email }}
      agree-tos = true
  when: certbot_email | length > 0

- name: Add credentials
  ansible.builtin.copy:
    dest: "{{ certbot_credentials_path }}"
    owner: root
    group: "{{ __root_group }}"
    mode: "0600"
    content: "{{ certbot_credentials_content }}"
  when: certbot_credentials_content | length > 0

- name: Ensure hooks directories exist
  ansible.builtin.file:
    path: "{{ __path }}"
    state: directory
    owner: root
    group: "{{ __root_group }}"
    mode: "0750"
  vars:
    __path: "/etc/letsencrypt/renewal-hooks/{{ item.type }}"
  loop: "{{ certbot_renew_hooks }}"
  loop_control:
    label: "{{ __path }}"
  tags: ["hooks"]

- name: Copy renew hooks
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: "/etc/letsencrypt/renewal-hooks/{{ item.type }}/{{ item.name }}"
    owner: root
    group: "{{ __root_group }}"
    mode: "0750"
  loop: "{{ certbot_renew_hooks }}"
  loop_control:
    label: "{{ item.type }} - {{ item.name }}"
  tags: ["hooks"]

- name: Get certificates
  ansible.builtin.command: "{{ certbot_generate_command }} -d '{{ item }}'"
  register: output
  changed_when:
    - output.rc == 0
    - "'Certificate not yet due for renewal; no action taken.' not in output.stdout"
  loop: "{{ certbot_domains }}"
  tags: ["fetch"]
