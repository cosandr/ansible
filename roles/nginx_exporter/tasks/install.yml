---
- name: get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version

- name: set systemd version fact
  set_fact:
    nginx_exporter_systemd_version: "{{ __systemd_version.stdout_lines[0].split(' ')[1] }}"

- block:
  - name: use systemd-sysusers
    debug:
      msg: "Systemd version {{ nginx_exporter_systemd_version }} OK for sysusers"

  - name: copy nginx_exporter sysusers file
    template:
      src: nginx_exporter.sysusers.j2
      dest: /usr/lib/sysusers.d/nginx_exporter.conf
      mode: 0644
      owner: root
      group: root

  - name: restart systemd-sysusers
    become: true
    systemd:
      name: systemd-sysusers
      state: restarted

  when:
    - not nginx_exporter_no_sysusers
    - nginx_exporter_systemd_version | int >= 215

- block:
  - name: use systemd-sysusers
    debug:
      msg: "Systemd version {{ nginx_exporter_systemd_version }} too low for sysusers"

  - name: create nginx_exporter system group
    group:
      name: nginx_exporter
      system: true
      state: present

  - name: create nginx_exporter system user
    user:
      name: nginx_exporter
      system: true
      shell: "/usr/sbin/nologin"
      group: nginx_exporter
      createhome: false

  when:
    - (nginx_exporter_no_sysusers) or (nginx_exporter_systemd_version | int < 215)

- block:
    - name: Get latest release
      uri:
        url: "https://api.github.com/repos/nginxinc/nginx-prometheus-exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: false
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      no_log: "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}"
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5
      check_mode: false

    - name: "Set node-exporter version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        nginx_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"
  when:
    - nginx_exporter_version == "latest"

- block:
    - name: "Get checksum list"
      set_fact:
        __nginx_exporter_checksums: "{{ lookup('url', 'https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v' + nginx_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"
      run_once: true
      check_mode: false

    - name: "Get checksum for {{ go_arch }} architecture"
      set_fact:
        __nginx_exporter_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ __nginx_exporter_checksums }}"
      when:
        - "('linux_' + go_arch + '.tar.gz') in item"
  delegate_to: localhost

- name: download nginx_exporter binary to local folder
  become: false
  get_url:
    url: "https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v{{ nginx_exporter_version }}/nginx-prometheus-exporter_{{ nginx_exporter_version }}_linux_{{ go_arch }}.tar.gz"
    dest: "/tmp/nginx-prometheus-exporter_{{ nginx_exporter_version }}_linux_{{ go_arch }}.tar.gz"
    checksum: "sha256:{{ __nginx_exporter_checksum }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  # run_once: true # <-- this cannot be set due to multi-arch support
  delegate_to: localhost
  check_mode: false

- name: unpack nginx_exporter binary
  become: false
  unarchive:
    src: "/tmp/nginx-prometheus-exporter_{{ nginx_exporter_version }}_linux_{{ go_arch }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/nginx-prometheus-exporter"
  delegate_to: localhost
  check_mode: false

- name: propagate official nginx_exporter binary
  copy:
    src: "/tmp/nginx-prometheus-exporter"
    dest: "{{ _nginx_exporter_binary_install_dir }}/nginx_exporter"
    mode: 0755
    owner: root
    group: root
  notify:
    - restart nginx_exporter
