---
- name: Get systemd version
  ansible.builtin.command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version

- name: Set systemd version fact
  ansible.builtin.set_fact:
    nginx_exporter_systemd_version: "{{ __systemd_version.stdout_lines[0].split(' ')[1] }}"

- name: Setup users with sysusers
  when:
    - not nginx_exporter_no_sysusers
    - nginx_exporter_systemd_version | int >= 215
  block:
    - name: Copy nginx_exporter sysusers file
      ansible.builtin.template:
        src: nginx_exporter.sysusers.j2
        dest: /usr/lib/sysusers.d/nginx_exporter.conf
        mode: "0644"
        owner: root
        group: root
      register: __sysusers

    - name: Restart systemd-sysusers  # noqa no-changed-when no-handler
      ansible.builtin.command: systemd-sysusers
      when: __sysusers.changed

- name: Setup exporter users
  when: (nginx_exporter_no_sysusers) or (nginx_exporter_systemd_version | int < 215)
  block:
    - name: Create nginx_exporter system group
      ansible.builtin.group:
        name: nginx_exporter
        system: true
        state: present

    - name: Create nginx_exporter system user
      ansible.builtin.user:
        name: nginx_exporter
        system: true
        shell: "/usr/sbin/nologin"
        group: nginx_exporter
        createhome: false

- name: Get latest release
  when: nginx_exporter_version == "latest"
  block:
    - name: Get latest release
      become: false
      delegate_to: localhost
      run_once: true
      ansible.builtin.uri:
        url: "https://api.github.com/repos/nginxinc/nginx-prometheus-exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: false
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      register: _latest_release
      until:
        - _latest_release.status is defined
        - _latest_release.status == 200
      retries: 5
      check_mode: false

    - name: "Set nginx-exporter version to {{ _latest_release.json.tag_name[1:] }}"
      ansible.builtin.set_fact:
        nginx_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"

- name: "Get checksum list"
  ansible.builtin.set_fact:
    __nginx_exporter_checksums: "{{ lookup('url', 'https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v' + nginx_exporter_version + '/' + nginx_exporter_checksums_name, wantlist=True) | list }}"

- name: Download nginx_exporter binary to local folder
  become: false
  ansible.builtin.get_url:
    url: "https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v{{ nginx_exporter_version }}/nginx-prometheus-exporter_{{ nginx_exporter_version }}_linux_{{ go_arch }}.tar.gz"
    dest: "/tmp/{{ nginx_exporter_archive_name }}"
    checksum: "sha256:{{ (__nginx_exporter_checksums | select('search', 'linux_' + go_arch + '.tar.gz') | first).split()[0] }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  # run_once: true # <-- this cannot be set due to multi-arch support
  delegate_to: localhost
  check_mode: false

- name: Create temporary dir
  become: false
  delegate_to: localhost
  check_mode: false
  ansible.builtin.file:
    path: "/tmp/nginx-prometheus-exporter-{{ go_arch }}"
    state: directory
    mode: "0755"

- name: Unpack nginx_exporter binary
  become: false
  delegate_to: localhost
  check_mode: false
  ansible.builtin.unarchive:
    src: "/tmp/{{ nginx_exporter_archive_name }}"
    dest: "/tmp/nginx-prometheus-exporter-{{ go_arch }}"
    creates: "/tmp/nginx-prometheus-exporter-{{ go_arch }}/nginx-prometheus-exporter"

- name: Propagate official nginx_exporter binary
  ansible.builtin.copy:
    src: "/tmp/nginx-prometheus-exporter-{{ go_arch }}/nginx-prometheus-exporter"
    dest: "{{ _nginx_exporter_binary_install_dir }}/nginx_exporter"
    mode: "0755"
    owner: root
    group: root
  notify:
    - Restart nginx_exporter
