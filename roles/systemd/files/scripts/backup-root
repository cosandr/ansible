#!/bin/bash

BORG_REPO=${BORG_REPO:-/tank/backup/borg}
# Setting this, so the repo does not need to be given on the commandline:
export BORG_REPO

# Setting this, so you won't be asked for your repository passphrase:
# export BORG_PASSPHRASE=''

# Check paths
declare -a backup_paths=()
declare -a check_paths=(
    "/etc"
    "/srv"
    "/home"
    "/root"
    "/var/www"
)
for p in "${check_paths[@]}"; do
    if [[ -d "$p" ]]; then
        backup_paths+=("$p")
    else
        echo "WARN: cannot backup $p: not found"
    fi
done
if [[ ${#backup_paths[@]} -eq 0 ]]; then
    echo "No backup paths found"
    exit 1
fi
echo "Backing up ${backup_paths[*]}"

# error handling
trap 'echo Backup interrupted >&2; exit 2' INT TERM

echo "Starting backup"

# Backup the most important directories into an archive named after
# the machine this script is currently running on:
# shellcheck disable=SC2086

borg create                      \
    --stats                      \
    --show-rc                    \
    --compression auto,zstd      \
    --exclude-caches             \
    --exclude '/home/*/.cache/*' \
    --exclude '*.qcow2'          \
    --exclude '/srv/nfs'         \
    --exclude '/*/.snapshots'    \
    ::'{hostname}-{now}'         \
    ${backup_paths[*]}

backup_exit=$?

echo "Pruning repository"

# Use the `prune` subcommand to maintain 7 daily, 4 weekly and 6 monthly
# archives of THIS machine. The '{hostname}-' prefix is very important to
# limit prune's operation to this machine's archives and not apply to
# other machines' archives also:

borg prune                 \
    --list                 \
    --prefix '{hostname}-' \
    --show-rc              \
    --keep-daily    2      \
    --keep-weekly   2      \
    --keep-monthly  6

prune_exit=$?

# use highest exit code as global exit code
global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))

if [ ${global_exit} -eq 0 ]; then
    echo "Backup and Prune finished successfully"
elif [ ${global_exit} -eq 1 ]; then
    echo "Backup and/or Prune finished with warnings"
else
    echo "Backup and/or Prune finished with errors"
fi

unset BORG_REPO
exit ${global_exit}
