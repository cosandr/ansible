---
- name: List of all enabled units with auto exec
  set_fact:
    check_exec_auto: "{{ ( check_exec_auto | default([]) ) + [ item.name ] }}"
  with_items: "{{ systemd_units }}"
  loop_control:
    label: "{{item.name}}"
  when:
    - ( item.disabled is not defined or
        item.disabled == false )
    - ( item.service is not defined or
        item.service.service is not defined or
        item.service.service.exec_start is not defined )

- block:
  - name: List of available script files
    set_fact:
      systemd_available_scripts: "{{ ( systemd_available_scripts | default([]) ) + [ item | basename ] }}"
    loop: "{{ lookup('fileglob', 'files/scripts/*', wantlist=True) }}"

  - name: List of available script templates
    set_fact:
      systemd_available_templates: "{{ ( systemd_available_templates | default([]) ) + [ item | basename | regex_replace('(.*)\\.j2$', '\\1') ] }}"
    loop: "{{ lookup('fileglob', 'templates/scripts/*', wantlist=True) }}"

  - name: Add list of available templates
    set_fact:
      systemd_available_scripts: "{{ systemd_available_scripts | union(systemd_available_templates) }}"
    when: systemd_available_templates is defined

  - name: Print systemd_available_scripts
    debug:
      var: systemd_available_scripts
      verbosity: 1

  - name: Print check_exec_auto
    debug:
      var: check_exec_auto
      verbosity: 1

  - block:
    - name: Create missing script list
      set_fact:
        systemd_missing_scripts: "{{ check_exec_auto | difference(systemd_available_scripts) }}"

    - name: Print systemd_missing_scripts
      debug:
        var: systemd_missing_scripts
        verbosity: 1

    - name: Warn about missing scripts
      ignore_errors: yes
      fail:
        msg: "{{ item }} will be skipped, missing script"
      with_items: "{{ systemd_missing_scripts }}"
      when:
        - systemd_missing_scripts is defined
        - systemd_missing_scripts | length > 0

    when: not systemd_no_check_missing

  - name: Initialize empty systemd_missing_scripts
    set_fact:
      systemd_missing_scripts: []
    when: systemd_no_check_missing

  - name: Ensure systemd_script_install_path exists
    file:
      path: "{{ systemd_script_install_path }}"
      state: directory
      owner: root
      group: root
      mode: 0755

  - block:
    - name: List of installed script files
      set_fact:
        systemd_installed_scripts: "{{ ( systemd_installed_scripts | default([]) ) + [ item | basename ] }}"
      loop: "{{ lookup('fileglob', systemd_script_install_path + '/*', wantlist=True) }}"

    - name: Delete old files
      file:
        path: "{{ systemd_script_install_path }}/{{ item }}"
        state: absent
      with_items: "{{ systemd_installed_scripts }}"
      loop_control:
        label: "{{ item }}"
      when:
        - systemd_installed_scripts is defined
        - systemd_installed_scripts | length > 0
        - item not in check_exec_auto
        - item not in systemd_scripts

    when: systemd_delete_old_scripts

  - name: Copy script files
    copy:
      src: "files/scripts/{{ item.name }}"
      dest: "{{ systemd_script_install_path }}/{{ item.name }}"
      owner: root
      group: root
      mode: 0755
    with_items: "{{ systemd_units }}"
    loop_control:
      label: "{{item.name}}"
    when:
      - ( systemd_available_templates is not defined or
          systemd_available_templates | length == 0 or
          item.name not in systemd_available_templates )
      - item.name not in systemd_missing_scripts
      - item.name in check_exec_auto
      - item.name in systemd_available_scripts

  - name: Copy script templates
    template:
      src: "templates/scripts/{{ item.name }}.j2"
      dest: "{{ systemd_script_install_path }}/{{ item.name }}"
      owner: root
      group: root
      mode: 0755
    with_items: "{{ systemd_units }}"
    loop_control:
      label: "{{item.name}}"
    when:
      - systemd_available_templates is defined
      - systemd_available_templates | length > 0
      - item.name in systemd_available_templates
      - item.name not in systemd_missing_scripts
      - item.name in check_exec_auto

  - name: Create undefined services with implicit service files
    template:
      src: templates/unit-undefined.service.j2
      dest: "{{ systemd_unit_install_path }}/{{ item.name }}.service"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"
    loop_control:
      label: "{{item.name}}"
    notify: reload systemd
    when:
      - item.service is not defined
      - item.name not in systemd_missing_scripts
      - item.name in check_exec_auto

  - name: Create undefined services with explicit service files
    template:
      src: templates/unit.service.j2
      dest: "{{ systemd_unit_install_path }}/{{ item.name }}.service"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"
    loop_control:
      label: "{{item.name}}"
    notify: reload systemd
    when:
      - item.service is defined
      - item.name not in systemd_missing_scripts
      - item.name in check_exec_auto

  - name: Create undefined timers
    template:
      src: templates/unit.timer.j2
      dest: "{{ systemd_unit_install_path }}/{{ item.name }}.timer"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"
    loop_control:
      label: "{{item.name}}"
    notify: reload systemd
    when:
      - item.timer is defined
      - item.name not in systemd_missing_scripts
      - item.name in check_exec_auto

  - name: Set undefined service state
    service:
      name: "{{ item.name }}.service"
      enabled: "{{ item.service.enabled | default(false) }}"
      state: "{{ 'started' if (item.service.started | default(false)) else 'stopped' }}"
    with_items: "{{ systemd_units }}"
    loop_control:
      label: "{{item.name}}: enabled? {{ item.service.enabled | default(false) }} started? {{ item.service.started | default(false) }}"
    when:
      - item.service is defined
      - item.name not in systemd_missing_scripts
      - item.name in check_exec_auto

  - name: Set undefined timer state
    service:
      name: "{{ item.name }}.timer"
      enabled: "{{ item.timer.enabled | default(false) }}"
      state: "{{ 'started' if (item.timer.started | default(false)) else 'stopped' }}"
    with_items: "{{ systemd_units }}"
    loop_control:
      label: "{{item.name}}: enabled? {{ item.timer.enabled | default(false) }} started? {{ item.timer.started | default(false) }}"
    when:
      - item.timer is defined
      - item.name not in systemd_missing_scripts
      - item.name in check_exec_auto

  when:
    - check_exec_auto is defined
    - check_exec_auto | length > 0

- name: No undefined services
  debug:
    msg: "Nothing to do"
  when: check_exec_auto is not defined or (check_exec_auto | length == 0)
