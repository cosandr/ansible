---

- name: Initialize target names list
  delegate_to: "{{ item }}"
  delegate_facts: true
  ansible.builtin.set_fact:
    __target_host_names:
      - "{{ hostvars[item].ansible_host }}"
      - "{{ hostvars[item].inventory_hostname }}"
  loop: "{{ ssh_dest_hosts }}"

- name: Add domain if available
  delegate_to: "{{ item }}"
  delegate_facts: true
  ansible.builtin.set_fact:
    __target_host_names: "{{ hostvars[item].__target_host_names + [tmp] }}"
  vars:
    tmp: "{{ hostvars[item].inventory_hostname }}.{{ hostvars[item].domain }}"
  loop: "{{ ssh_dest_hosts }}"
  when:
    - hostvars[item].domain is defined
    - hostvars[item].domain | length > 0

- name: Add custom names if available
  delegate_to: "{{ item }}"
  delegate_facts: true
  ansible.builtin.set_fact:
    __target_host_names: "{{ hostvars[item].__target_host_names + hostvars[item].ssh_custom_host_names }}"
  loop: "{{ ssh_dest_hosts }}"
  when:
    - hostvars[item].ssh_custom_host_names is defined
    - hostvars[item].ssh_custom_host_names | length > 0

- name: Scan target host keys
  ansible.builtin.command: "ssh-keyscan {{ hostvars[item].__target_host_names | join(',') }}"
  check_mode: false
  changed_when: false
  loop: "{{ ssh_dest_hosts }}"
  register: __host_keys

- name: Ensure host keys are in known_hosts
  ansible.builtin.blockinfile:
    path: "{{ ssh_known_hosts_file }}"
    marker: "# {mark} {{ ssh_hosts_comment }}"
    create: true
    mode: "{{ ssh_known_hosts_mode }}"
    block: "{{ __host_keys.results | map(attribute='stdout_lines') | flatten | sort | join('\n') }}"

- name: Add target host names to /etc/hosts
  ansible.builtin.blockinfile:
    path: /etc/hosts
    marker: "# {mark} {{ ssh_hosts_comment }}"
    block: |
      {% for h in ssh_dest_hosts %}
      {{ hostvars[h].ansible_host }} {{ hostvars[h].ssh_conf_hosts_names | default(hostvars[h].__target_host_names | difference([hostvars[h].ansible_host])) | unique | join(' ') }}
      {% endfor %}
  when: ssh_conf_hosts | bool
  tags: ["hosts"]
