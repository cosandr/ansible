---

- block:
    - name: Ensure {{ mkinitcpio_uefi_path }} exists
      file:
        path: "{{ mkinitcpio_uefi_path }}"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Write kernel parameters
      copy:
        content: "{{ kernel_params }}\n"
        dest: "/etc/kernel/cmdline"
        owner: root
        group: root
        mode: 0644
      notify: rebuild all mkinitcpio presets
  when: mkinitcpio_uefi_bundle | bool

- name: Configure mkinitcpio
  template:
    src: mkinitcpio.conf.j2
    dest: /etc/mkinitcpio.conf
    owner: root
    group: root
    mode: 0644
  notify: rebuild all mkinitcpio presets
  tags: ["configure"]

- name: Configure presets
  template:
    src: preset.j2
    dest: "/etc/mkinitcpio.d/{{ item.name }}.preset"
    owner: root
    group: root
    mode: 0644
  loop: "{{ mkinitcpio_kernels }}"
  loop_control:
    label: "{{ item.name }}"
  notify: rebuild all mkinitcpio presets
  tags: ["presets"]

- block:
    - name: Prepare efibootmgr facts
      set_fact:
        __mkinitcpio_efibootmgr: "{{ __mkinitcpio_efibootmgr | default([]) + [tmp_dict] }}"
      vars:
        tmp_dict:
          disk: "{{ esp_disk }}"
          part: "{{ esp_part }}"
          loader: "{{ mkinitcpio_uefi_path.replace(esp_mount, '', 1) }}/{{ mkinitcpio_uefi_prefix }}-{{ item.name }}.efi"
          label: "{{ item.label | default(ansible_distribution + ' ' + item.name) }}"
      loop: "{{ mkinitcpio_kernels }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Prepare efibootmgr facts [fallback]
      set_fact:
        __mkinitcpio_efibootmgr: "{{ __mkinitcpio_efibootmgr | default([]) + [tmp_dict] }}"
      vars:
        tmp_dict:
          disk: "{{ esp_disk }}"
          part: "{{ esp_part }}"
          loader: "{{ mkinitcpio_uefi_path.replace(esp_mount, '', 1) }}/{{ mkinitcpio_uefi_prefix }}-{{ item.name }}-fallback.efi"
          label: "{{ item.label | default(ansible_distribution + ' ' + item.name + ' fallback') }}"
      loop: "{{ mkinitcpio_kernels }}"
      loop_control:
        label: "{{ item.name }}"
      when: "'fallback' in (item.presets | default(mkinitcpio_kernel_presets))"

    - name: Add entries in EFI
      include_role:
        name: "efibootmgr"
      vars:
        efibootmgr_entries: "{{ __mkinitcpio_efibootmgr }}"
  when:
    - mkinitcpio_uefi_bundle | bool
    - mkinitcpio_uefi_add | bool

- block:
    - name: Prepare list of files to sign
      set_fact:
        __mkinitcpio_sign_files: "{{ __mkinitcpio_sign_files | default([]) + [tmp] }}"
      vars:
        tmp: "{{ mkinitcpio_uefi_path }}/{{ mkinitcpio_uefi_prefix }}-{{ item.name }}.efi"
      loop: "{{ mkinitcpio_kernels }}"
      loop_control:
        label: "{{ item.name }}"
      tags: ["sbctl"]

    - name: Prepare list of files to sign [fallback]
      set_fact:
        __mkinitcpio_sign_files: "{{ __mkinitcpio_sign_files | default([]) + [tmp] }}"
      vars:
        tmp: "{{ mkinitcpio_uefi_path }}/{{ mkinitcpio_uefi_prefix }}-{{ item.name }}-fallback.efi"
      loop: "{{ mkinitcpio_kernels }}"
      loop_control:
        label: "{{ item.name }}"
      when: "'fallback' in (item.presets | default(mkinitcpio_kernel_presets))"
      tags: ["sbctl"]

  when: mkinitcpio_uefi_sbctl_sign | bool
