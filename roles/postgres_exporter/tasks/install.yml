---
- block:
    - name: Get latest release
      uri:
        url: "https://api.github.com/repos/prometheus-community/postgres_exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: false
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      no_log: "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}"
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5
      check_mode: false

    - name: "Set postgres_exporter version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        postgres_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"
  when:
    - postgres_exporter_version == "latest"

- name: "Get checksum list"
  set_fact:
    __postgres_exporter_checksums: "{{ lookup('url', 'https://github.com/prometheus-community/postgres_exporter/releases/download/v' + postgres_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"
  run_once: true
  check_mode: false
  delegate_to: localhost

- name: "Get checksum for {{ go_arch }} architecture"
  set_fact:
    __postgres_exporter_checksum: "{{ item.split(' ')[0] }}"
  with_items: "{{ __postgres_exporter_checksums }}"
  when:
    - "('linux-' + go_arch + '.tar.gz') in item"
  delegate_to: localhost

- name: download postgres_exporter binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus-community/postgres_exporter/releases/download/v{{ postgres_exporter_version }}/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    checksum: "sha256:{{ __postgres_exporter_checksum }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  run_once: true
  delegate_to: localhost
  check_mode: false

- name: unpack postgres_exporter binaries
  become: false
  unarchive:
    src: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch }}/postgres_exporter"
  delegate_to: localhost
  check_mode: false

- name: propagate official postgres_exporter binary
  copy:
    src: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch }}/postgres_exporter"
    dest: "{{ _postgres_exporter_binary_install_dir }}/postgres_exporter"
    mode: 0755
    owner: root
    group: root
  notify:
    - restart postgres_exporter
