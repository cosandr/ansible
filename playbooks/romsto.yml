#!/usr/bin/env -S ansible-playbook
---

- name: Romsto playbook
  hosts: romsto
  tasks:
    - name: Setup extra SSD
      ansible.builtin.blockinfile:
        path: /boot/config/go
        marker: "# {mark} datassd"
        block: |
          # Enable swap partition
          swapon -d {{ swap_disk }}

          # Mount persistent data partition
          mkdir -p {{ persistent_disk.path }}
          mount -o {{ ssd_mount_opts }} {{ persistent_disk.dev }} {{ persistent_disk.path }}

          # Mount unassigned data partition
          mkdir -p {{ data_disk.path }}
          mount -o {{ ssd_mount_opts }} {{ data_disk.dev }} {{ data_disk.path }}
      tags: ["go", "datassd"]

    - name: Setup extra SSD scrub
      ansible.builtin.copy:
        dest: /etc/cron.weekly/datassd-scrub.sh
        owner: root
        group: root
        mode: "0755"
        content: |
          #!/bin/bash

          /sbin/btrfs scrub start {{ persistent_disk.path }} &> /dev/null
          /sbin/btrfs scrub start {{ data_disk.path }} &> /dev/null
      tags: ["datassd"]

    - name: Ensure user script dir exists
      ansible.builtin.file:
        path: "{{ user_scripts_path }}/0-mount-datassd"
        state: directory
        owner: root
        group: root
        mode: "0700"
      tags: ["datassd"]

    - name: Ensure data SSD is mounted on array start
      ansible.builtin.copy:
        dest: "{{ user_scripts_path }}/0-mount-datassd/script"
        owner: root
        group: root
        mode: "0600"
        content: |
          #!/bin/bash

          #name=0-mount-datassd
          #description=Ensure {{ data_disk.path | basename }} is mounted
          #arrayStarted=true
          #noParity=true

          if ! grep -q '{{ data_disk.path | regex_escape() }}' /proc/mounts; then
            mkdir -p {{ data_disk.path }}
            mount -o {{ ssd_mount_opts }} {{ data_disk.dev }} {{ data_disk.path }}
          fi
      tags: ["datassd"]

    - name: Configure mlocate
      tags: ["mlocate"]
      block:
        - name: Create mlocate db dir
          ansible.builtin.file:
            path: "{{ persistent_disk.path }}/mlocate"
            state: directory
            owner: root
            group: slocate
            mode: "0750"

        - name: Copy config file  # noqa line-length
          ansible.builtin.copy:
            dest: "{{ persistent_disk.path }}/updatedb.conf"
            owner: root
            group: root
            mode: "0644"
            content: |
              PRUNE_BIND_MOUNTS = "yes"
              PRUNEFS = "9p afs anon_inodefs auto autofs bdev binfmt_misc cgroup cifs coda configfs cpuset debugfs devpts ecryptfs exofs fuse fuse.sshfs fusectl gfs gfs2 gpfs hugetlbfs inotifyfs iso9660 jffs2 lustre mqueue ncpfs nfs nfs4 nfsd pipefs proc ramfs rootfs rpc_pipefs securityfs selinuxfs sfs sockfs sysfs tmpfs ubifs udf usbfs ceph fuse.ceph"
              PRUNENAMES = ".git .hg .svn .bzr .arch-ids {arch} CVS"
              PRUNEPATHS = "/afs /dev /media /mnt /net /proc /sys /tmp /usr/tmp /var/cache/ccache /var/lib/ceph /var/spool/cups /var/tmp /var/lib/docker {{ data_disk.path }}/docker/data /mnt/disk*"

        - name: Configure mlocate on boot
          ansible.builtin.blockinfile:
            path: /boot/config/go
            marker: "# {mark} mlocate"
            block: |
              ln -sf {{ persistent_disk.path }}/updatedb.conf /etc/updatedb.conf
              [ -d /var/lib/mlocate ] && rm -rf /var/lib/mlocate
              ln -s {{ persistent_disk.path }}/mlocate /var/lib/
          tags: ["go"]

  roles:
    - role: nginx_site
      tags: ["nginx_site"]

    - role: promtail
      tags: ["promtail"]
  post_tasks:
    - name: Ensure promtail is persistent
      tags: ["promtail", "go"]
      block:
        - name: Copy promtail rc file
          ansible.builtin.copy:
            src: /etc/rc.d/rc.promtail
            remote_src: true
            dest: "{{ persistent_disk.path }}/promtail/rc.promtail"
            owner: root
            group: root
            mode: "0755"

        - name: Copy promtail logrotate config
          ansible.builtin.copy:
            src: /etc/logrotate.d/promtail
            remote_src: true
            dest: "{{ persistent_disk.path }}/promtail/promtail.logrotate"
            owner: root
            group: root
            mode: "0644"

        - name: Setup promtail on boot
          ansible.builtin.blockinfile:
            path: /boot/config/go
            marker: "# {mark} promtail"
            block: |
              install -o root -g root -m755 {{ persistent_disk.path }}/promtail/rc.promtail /etc/rc.d/rc.promtail
              install -o root -g root -m644 {{ persistent_disk.path }}/promtail/promtail.logrotate /etc/logrotate.d/promtail
              /etc/rc.d/rc.promtail start
