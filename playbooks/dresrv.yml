#!/usr/bin/env -S ansible-playbook
---
- name: Server playbook
  gather_facts: true
  hosts: dresrv
  pre_tasks:
    - name: Run common role
      import_role:
        name: common
      tags: ["always"]

    - name: Merge ports
      set_fact:
        ports: "{{ ports | combine(_ports, recursive=true) }}"
      tags: ["always"]

    - name: Merge Docker ports
      set_fact:
        ports: "{{ ports | combine(ansible_local.docker.ports, recursive=true) }}"
      when: ansible_local.docker is defined and ansible_local.docker.ports is defined
      tags: ["always"]

    - name: Ensure site log dir exists
      file:
        path: "{{ nginx_sites_logs }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      tags: ["nginx"]

    - name: Install rtmp config
      template:
        src: "{{ inventory_dir }}/files/{{ inventory_hostname }}/nginx/rtmp.conf.j2"
        dest: "/etc/nginx/rtmp.conf"
        owner: root
        group: root
        mode: 0644
      tags: ["nginx"]

    - name: Get Cloudflare IPv4 addresses
      check_mode: false
      uri:
        url: https://www.cloudflare.com/ips-v4
        return_content: true
      register: __cf_ipv4
      tags: ["nginx", "cloudflare"]

    - name: Get Cloudflare IPv6 addresses
      check_mode: false
      uri:
        url: https://www.cloudflare.com/ips-v6
        return_content: true
      register: __cf_ipv6
      tags: ["nginx", "cloudflare"]

    - name: Copy Cloudflare config
      copy:
        owner: root
        group: root
        mode: 0644
        dest: "{{ nginx_cloudflare_real_ips }}"
        content: |
          {% for a in __cf_ipv4.content | split %}
          set_real_ip_from {{ a }};
          {% endfor %}
          {% for a in __cf_ipv6.content | split %}
          set_real_ip_from {{ a }};
          {% endfor %}
          real_ip_header CF-Connecting-IP;
      tags: ["nginx", "cloudflare"]

    - name: Set SELinux contexts for WebDAV
      sefcontext:
        target: "{{ item }}(/.*)?"
        setype: httpd_sys_rw_content_t
        state: present
      loop: "{{ webdav_selinux_rw }}"
      tags: ["nginx", "webdav"]

    - name: Restore SELinux contexts
      command: "restorecon -rv {{ item }}"
      register: __restorecon
      loop: "{{ webdav_selinux_rw }}"
      changed_when: false
      tags: ["nginx", "webdav"]

    - name: Grant user nginx write access to discord
      ansible.posix.acl:
        path: /var/www/main/discord
        entity: nginx
        etype: user
        permissions: rwx
        recursive: true
        state: present
      tags: ["nginx", "discord"]

    - name: Ensure passlib is installed
      dnf:
        name: python3-passlib
        state: present
      tags: ["nginx", "discord"]

    - name: Create Discord htaccess file
      community.general.htpasswd:
        path: /etc/nginx/discord_upload.htaccess
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        owner: root
        group: nginx
        mode: 0640
      loop: "{{ nginx_htpasswd['discord'] }}"
      loop_control:
        label: "{{ item.name }}"
      tags: ["nginx", "discord"]

  vars:
    webdav_selinux_rw:
      - "/var/www/main/discord"
      - "/var/www/dav-temp"
    cadvisor_version: "0.40.0"
    grafana_version: "latest"
    nginx_exporter_version: "latest"
    node_exporter_version: "latest"
  roles:
    - role: samba
      tags: ["samba"]

    - role: borg
      tags: ["borg"]

    - role: btrbk
      tags: ["btrbk"]

    - role: sshd
      tags: ["sshd"]

    - role: postfix
      tags: ["postfix"]

    - role: sudo
      tags: ["sudo"]

    - role: firewall_config
      tags: ["firewall"]

    - role: serial_proxy
      tags: ["serial"]

    - role: fail2ban
      tags: ["fail2ban"]

    - role: nginx
      tags: ["nginx", "web-server"]

    - role: vouch
      tags: ["vouch", "web-server"]

    - role: systemd
      tags: ["systemd"]

    - role: cosandr.dnf_automatic
      tags: ["dnf_automatic"]

    - role: dracut-sshd
      tags: ["dracut-sshd"]

    - role: netclient
      tags: ["netclient"]

    - role: cadvisor
      tags: ["prometheus-stack", "cadvisor"]

    - role: nginx_exporter
      tags: ["prometheus-stack", "nginx_exporter"]

    - role: node_exporter
      tags: ["prometheus-stack", "node_exporter"]
