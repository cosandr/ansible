#!/usr/bin/env -S ansible-playbook
---
- name: SSH
  hosts: drepi
  gather_facts: true
  vars:
    ansible_ssh_pass: raspberry  # fresh install
  tasks:
    # Set up ssh
    # https://github.com/hannseman/ansible-raspbian
    - name: Add SSH keys
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ item }}"
        state: present
      with_items: "{{ ssh_authorized_keys }}"
      tags: ["ssh"]

  roles:
    - role: sshd
      vars:
        _sshd_pkg: "openssh-server"
      become: true
      tags: ["sshd"]

- name: Raspberry Pi 4 playbook
  gather_facts: false
  become: true
  hosts: drepi
  vars:
    system_timezone: "Europe/Oslo"
    system_locale: "en_US.UTF-8"
  pre_tasks:
    - name: Run common role
      become: false
      ansible.builtin.import_role:
        name: common
      tags: ["always"]

    - name: Gather facts
      ansible.builtin.setup:
      tags: ["always"]

    - name: Configure motion
      block:
        - name: Mount motion share
          ansible.posix.mount:
            src: "{{ hostvars['truenas'].local_ips.general }}:/mnt/tank/media/motion"
            path: "/mnt/motion"
            opts: "defaults,vers=4,rw,noatime,bg"
            state: mounted
            fstype: nfs

        - name: Ensure camera is enabled
          ansible.builtin.lineinfile:
            dest: "/boot/config.txt"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            state: present
          notify: Reboot
          with_items:
            - regexp: "^#?start_x"
              line: "start_x=1"
            - regexp: "^#?gpu_mem"
              line: "gpu_mem=128"

        # NOTE: might need 'sudo rpi-update'
        # - name: Ensure kernel module is loaded at boot
        #   ansible.builtin.lineinfile:
        #     dest: "/etc/modules-load.d/modules.conf"
        #     regexp: "^#?bcm2835-v4l2"
        #     line: "bcm2835-v4l2"
        #     state: present
        #   notify: Reboot

      tags: ["motion"]

  tasks:
    - name: Configure interactive shell stuff
      block:
        - name: Install vim
          ansible.builtin.apt:
            name: vim
            state: present

        - name: Configure bashrc
          ansible.builtin.blockinfile:
            path: /etc/bash.bashrc
            block: |
              export EDITOR=vim
              alias ll='ls -lh'
              alias la='ll -A'

      tags: ["bash", "vim"]

    - name: Configure locale
      block:
        - name: Set timezone
          ansible.builtin.timezone:
            name: "{{ system_timezone }}"

        - name: Ensure locale exists
          ansible.builtin.locale_gen:
            name: "{{ system_locale }}"
            state: present
          notify: Update locale

        - name: Set default system locale
          ansible.builtin.debconf:
            name: 'locales'
            question: 'locales/default_environment_locale'
            vtype: 'string'
            value: "{{ system_locale }}"
          notify: Update locale

      tags: ["locale"]

  roles:
    - role: hostname
      tags: ["hostname"]

    - role: firewall_config
      tags: ["ufw", "firewall"]

    - role: motion
      tags: ["motion"]

    - role: node_exporter
      tags: ["node_exporter"]

    - role: unattended-upgrades
      tags: ["unattended-upgrades"]

    - role: postfix
      tags: ["postfix"]

  handlers:
    - name: Reboot
      ansible.builtin.reboot: {}

    - name: Update locale
      ansible.builtin.command: "/usr/sbin/update-locale LANG={{ system_locale }}"
