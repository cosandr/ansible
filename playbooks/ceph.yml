#!/usr/bin/env -S ansible-playbook
---

- name: Ceph configuration
  hosts: ceph
  gather_facts: false
  tasks:
    - name: Run on only one host  # noqa: run-once[task]
      run_once: true
      tags: ["orch"]
      block:
        - name: Deploy RGW service
          ceph_orch_apply:
            spec: "{{ lookup('template', repo_base_dir + '/files/ceph/rgw-main.yml.j2') }}"
          tags: ["rgw"]

        - name: Read SSL cert from localgw
          delegate_to: localgw01
          ansible.builtin.slurp:
            path: "{{ item }}"
          loop:
            - "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"
            - "/etc/letsencrypt/live/{{ domain }}/privkey.pem"
          register: __certs
          tags: ["rgw-ingress"]

        - name: Deploy RGW ingress service
          ceph_orch_apply:
            spec: "{{ lookup('template', repo_base_dir + '/files/ceph/rgw-main-ingress.yml.j2') }}"
          vars:
            rgw_ingress_ssl_cert: |
              {{ (__certs.results[0].content | b64decode).strip() }}
              {{ (__certs.results[1].content | b64decode).strip() }}
          tags: ["rgw-ingress"]

    - name: Proxy RGW to MGMT
      ansible.builtin.include_role:
        name: socat_proxy
        apply:
          tags: ["rgw-ingress"]
      tags: ["rgw-ingress"]

    - name: Mount CephFS
      ansible.posix.mount:
        src: admin@.cephfs=/
        path: /mnt/ceph
        fstype: ceph
        opts: "noatime"
        state: mounted
      tags: ["cephfs"]

    - name: Set CephFS SELinux context
      community.general.sefcontext:
        target: "/mnt/ceph(/.*)?"
        seuser: system_u
        setype: var_t
        state: present
      notify: Restore ceph SELinux context
      tags: ["cephfs", "selinux"]

    - name: Create libvirt dir on CephFS  # noqa: run-once[task]
      run_once: true
      ansible.builtin.file:
        path: /mnt/ceph/libvirt
        state: directory
        owner: root
        group: root
        mode: "0755"
      tags: ["cephfs", "libvirt"]

    - name: Set libvirt CephFS SELinux context
      community.general.sefcontext:
        target: "/mnt/ceph/libvirt(/.*)?"
        seuser: system_u
        setype: virt_image_t
        state: present
      notify: Restore libvirt SELinux context
      tags: ["cephfs", "selinux"]

    - name: Define libvirt CephFS pool
      community.libvirt.virt_pool:
        name: cephfs
        command: define
        xml: "{{ lookup('file', repo_base_dir + '/files/ceph/libvirt-cephfs.xml') }}"
        state: "present"
      tags: ["libvirt", "cephfs"]

    - name: Start libvirt CephFS pool
      community.libvirt.virt_pool:
        name: cephfs
        state: active
        autostart: true
      tags: ["libvirt", "cephfs"]

    - name: Ensure libvirt CephFS pool is autostarted
      community.libvirt.virt_pool:
        name: cephfs
        autostart: true
      tags: ["libvirt", "cephfs"]

    - name: Create my user
      ansible.builtin.user:
        name: "{{ my_user }}"
        password: "{{ my_user_pass }}"
        shell: "/usr/bin/zsh"
        home: "/mnt/ceph/{{ my_user }}"
        create_home: true
        groups: wheel
        append: true
        uid: 1000
      tags: ["user"]

    # Based on defaults from 'semanage fcontext -l | grep user_home'
    - name: Set user dir CephFS SELinux context
      community.general.sefcontext:
        target: "/mnt/ceph/{{ my_user }}"
        ftype: d
        seuser: unconfined_u
        setype: user_home_dir_t
        state: present
      notify: Restore user SELinux context
      tags: ["user", "selinux"]

    - name: Set user files CephFS SELinux context
      community.general.sefcontext:
        target: "/mnt/ceph/{{ my_user }}/.+"
        seuser: unconfined_u
        setype: user_home_t
        state: present
      notify: Restore user SELinux context
      tags: ["user", "selinux"]

    - name: Configure user SSH keys  # noqa: run-once[task]
      run_once: true
      ansible.posix.authorized_key:
        user: "{{ my_user }}"
        key: "{{ ssh_authorized_keys | join('\n') }}"
        state: present
        exclusive: true
      tags: ["user", "ssh"]

  handlers:
    - name: Restore ceph SELinux context  # noqa: run-once[task]
      run_once: true
      ansible.builtin.command: restorecon -r /mnt/ceph

    - name: Restore libvirt SELinux context  # noqa: run-once[task]
      run_once: true
      ansible.builtin.command: restorecon -r /mnt/ceph/libvirt

    - name: Restore user SELinux context  # noqa: run-once[task]
      run_once: true
      ansible.builtin.command: "restorecon -r /mnt/ceph/{{ my_user }}"
