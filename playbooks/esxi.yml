#!/usr/bin/env -S ansible-playbook
---

- name: Prepare esxi groups
  hosts: all
  become: false
  gather_facts: false
  tasks:
    - name: Add managed guests
      run_once: true
      add_host:
        name: "{{ item }}"
        group: esxi
      loop: "{{ groups['all_esxi'] }}"
      when: "'all_guests' in ansible_run_tags or item.lower() in groups['servers']"
      tags: ["always"]

    - name: Add managed guests [manual]
      run_once: true
      add_host:
        name: "{{ item }}"
        group: esxi
      loop:
        - "win-aquaero"
      when: "'all_guests' not in ansible_run_tags"
      tags: ["always"]

- hosts: esxi
  gather_facts: false
  tasks:
    - name: Power on guests
      delegate_to: localhost
      community.vmware.vmware_guest:
        hostname: "{{ hostvars['slb'].ansible_host }}"
        username: "{{ hostvars['slb'].esxi_username }}"
        password: "{{ hostvars['slb'].esxi_password }}"
        validate_certs: false
        uuid: "{{ vm_uuid }}"
        state: 'poweredon'
      when: "'start' in ansible_run_tags"
      tags: ["start"]

    - name: Power down guests
      delegate_to: localhost
      community.vmware.vmware_guest:
        hostname: "{{ hostvars['slb'].ansible_host }}"
        username: "{{ hostvars['slb'].esxi_username }}"
        password: "{{ hostvars['slb'].esxi_password }}"
        validate_certs: false
        uuid: "{{ vm_uuid }}"
        state: 'shutdownguest'
      when:
        - "'stop' in ansible_run_tags"
        - hostvars[inventory_hostname]['summary.runtime.powerState'] != 'poweredOff'
      tags: ["stop"]

- hosts: esxi_hosts
  gather_facts: false
  tasks:
    - name: Mount NFS datastores
      delegate_to: localhost
      community.vmware.vmware_host_datastore:
        hostname: '{{ ansible_host }}'
        username: '{{ esxi_username }}'
        password: '{{ esxi_password }}'
        validate_certs: false
        datastore_name: '{{ item.name }}'
        datastore_type: 'nfs41'
        nfs_server: '{{ item.server }}'
        nfs_path: '{{ item.path }}'
        nfs_ro: false
        state: present
      loop: "{{ nfs_datastores }}"
      when: "'mount' in ansible_run_tags "
      tags: ["mount"]

    - name: Unmount NFS datastores
      delegate_to: localhost
      community.vmware.vmware_host_datastore:
        hostname: '{{ ansible_host }}'
        username: '{{ esxi_username }}'
        password: '{{ esxi_password }}'
        validate_certs: false
        datastore_name: '{{ item.name }}'
        state: absent
      loop: "{{ nfs_datastores }}"
      when: "'unmount' in ansible_run_tags "
      tags: ["unmount"]
