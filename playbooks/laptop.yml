#!/usr/bin/env -S ansible-playbook
---
- name: Laptop playbook
  gather_facts: false
  hosts: laptop
  pre_tasks:
    - name: Run common role
      import_role:
        name: common
      tags: ["always"]

    - name: Merge ports
      set_fact:
        ports: "{{ ports | combine(_ports, recursive=true) }}"
      tags: ["always"]

    - name: Gather facts
      setup:
      tags: ["always"]

    - name: Install packages (pacman)
      pacman:
        name: "{{ pacman_packages }}"
        state: present
      when: ansible_distribution == 'Archlinux'
      tags: ["pacman"]
  tasks:
    - name: Enable resume dracut module
      become: true
      copy:
        dest: /etc/dracut.conf.d/resume.conf
        owner: root
        group: root
        mode: 0644
        content: |
          add_dracutmodules+=" resume "
      when: ansible_os_family == 'RedHat'
      notify: dracut regenerate
      tags: ["hibernate"]

    - name: Install i3 packages (pacman)
      pacman:
        name: "{{ pacman_i3_packages }}"
        state: present
      when: ansible_distribution == 'Archlinux'
      tags: ["i3"]

    - name: Install sway packages (pacman)
      pacman:
        name: "{{ pacman_sway_packages }}"
        state: present
      when: ansible_distribution == 'Archlinux'
      tags: ["sway"]

  handlers:
    - name: dracut regenerate
      become: true
      command: dracut -f --regenerate-all
  roles:
    - role: node_exporter
      vars:
        node_exporter_skip_install: false
        node_exporter_version: "latest"
        node_exporter_port: "{{ ports.node_exporter }}"
        node_exporter_collectors: []

      tags: ["prometheus-stack", "node_exporter"]

    - role: laptop
      tags: ["laptop"]

    - role: arch-common
      when: ansible_distribution == 'Archlinux'
      tags: ["arch-common"]

    - role: borg
      tags: ["borg"]

    - role: reflector
      when: ansible_distribution == 'Archlinux'
      tags: ["reflector"]

    - role: locale_conf
      when: ansible_os_family != 'RedHat'
      tags: ["locale"]

    - role: sudo
      tags: ["sudo"]

    - role: hostname
      tags: ["hostname"]

    - role: systemd_networkd
      when: network_manager == "systemd-networkd"
      tags: ["systemd-networkd"]

    - role: chezmoi
      tags: ["chezmoi"]

    - role: sbctl
      when: ansible_distribution == 'Archlinux'
      tags: ["sbctl"]

    - role: paru
      vars:
        aur_name: paru-bin
      when: ansible_distribution == 'Archlinux'
      tags: ["paru"]

    - role: spotify
      tags: ["spotify"]

    - role: discord
      tags: ["discord"]

    - role: vscode
      tags: ["vscode"]

    - role: ufw
      when: ansible_os_family == 'Debian'
      tags: ["ufw"]

    - role: install_aur
      when: ansible_distribution == 'Archlinux'
      tags: ["aur"]

    - role: sshd
      tags: ["sshd"]

    - role: sudo
      tags: ["sudo"]

    - role: pipewire
      tags: ["pipewire"]

    - role: google-chrome
      tags: ["google-chrome"]

    - role: tlp
      tags: ["tlp"]

    # - role: xss-lock
    #   tags: ["xss-lock"]

    - role: xorg
      tags: ["xorg"]

    - role: xidlehook
      when: ansible_distribution == 'Archlinux'
      tags: ["xidlehook"]

    # - role: xsession
    #   tags: ["xsession"]

    - role: gnome-keyring
      tags: ["gnome-keyring"]

    # - role: thinkfan
    #   tags: ["thinkfan"]

    - role: ddcutil
      tags: ["ddcutil"]

    - role: install_aur
      vars:
        aur_packages: "{{ aur_i3_packages }}"
      when: ansible_distribution == 'Archlinux'
      tags: ["i3"]

    - role: install_aur
      vars:
        aur_packages: "{{ aur_sway_packages }}"
      when: ansible_distribution == 'Archlinux'
      tags: ["sway"]

    - role: aisbergg.snapper
      tags: ["snapper"]

