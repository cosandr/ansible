#!/usr/bin/env -S ansible-playbook
---

- name: Setup Docker Swarm nodes
  hosts: swarm
  pre_tasks:
    - name: Include common tasks
      ansible.builtin.include_tasks:
        file: ../tasks/common_servers.yml
      tags: ["always"]
  roles:
    - role: ceph_client
      tags: ["ceph"]

    - role: geerlingguy.docker
      tags: ["docker"]

    - role: keepalived
      tags: ["keepalived"]

  post_tasks:
    - name: Enable daemon cluster mode SELinux boolean
      ansible.posix.seboolean:
        name: daemons_enable_cluster_mode
        state: true
        persistent: true
      when:
        - ansible_os_family == 'RedHat'
        - ansible_selinux.status == "enabled"
      tags: ["keepalived"]

    - name: Mount CephFS
      ansible.posix.mount:
        src: swarm@.cephfs=/swarm
        path: /mnt/ceph
        fstype: ceph
        opts: "noatime"
        state: mounted
      tags: ["ceph"]

    - name: Mount media shares
      ansible.posix.mount:
        src: "{{ hostvars['theia'].host_ips.vm }}:{{ item.src }}"
        path: "{{ item.dest }}"
        opts: "defaults,noatime"
        state: mounted
        fstype: nfs
      loop:
        - src: "/mnt/tank/media"
          dest: "/mnt/media"
        - src: "/mnt/tank/yes"
          dest: "/mnt/yes"
      tags: ["nfs"]

    - name: Install python3-docker
      ansible.builtin.dnf:
        name: python3-docker
        state: present
      tags: ["swarm", "registry"]

    - name: Setup swarm
      tags: ["swarm"]
      block:
        - name: Initialize swarm
          delegate_to: "{{ docker_swarm_managers[0] }}"
          run_once: true
          community.docker.docker_swarm:
            state: present
            advertise_addr: "{{ ansible_host }}"
            default_addr_pool:
              - "10.233.0.0/16"
            task_history_retention_limit: 2
          register: __swarm_init

        - name: Join nodes
          community.docker.docker_swarm:
            state: join
            advertise_addr: "{{ ansible_host }}"
            remote_addrs: "{{ docker_swarm_managers | map('extract', hostvars, 'ansible_host') | map('regex_replace', '$', ':2377') }}"
            join_token: "{{ __swarm_init.swarm_facts.JoinTokens[docker_swarm_role] }}"
          when: __swarm_init.get('swarm_facts', {}).get('JoinTokens', {}).get(docker_swarm_role, '')

        - name: Configure node labels
          delegate_to: "{{ docker_swarm_managers[0] }}"
          community.docker.docker_node:
            hostname: "{{ inventory_hostname }}"
            labels: "{{ docker_node_labels }}"
            labels_state: replace
          tags: ["labels"]

    - name: Login to registries
      community.docker.docker_login:
        registry_url: "{{ item.url }}"
        username: "{{ item.username }}"
        password: "{{ item.password }}"
      loop: "{{ docker_registries }}"
      loop_control:
        label: "{{ item.url }} [{{ item.username }}]"
      tags: ["registry"]
