#!/usr/bin/env -S ansible-playbook
---

- name: Setup Prometheus common
  hosts: prom_common
  gather_facts: true
  roles:
    - role: prometheus
      tags: ["prometheus"]

    - role: alertmanager
      tags: ["alertmanager"]

    - role: blackbox_exporter
      tags: ["blackbox_exporter"]

- name: Setup on-prem Prometheus servers
  hosts: prom
  gather_facts: true
  pre_tasks:
    - name: Configure rsyslog
      tags: ["rsyslog"]
      block:
        - name: Install rsyslog
          ansible.builtin.dnf:
            name: rsyslog
            state: present

        - name: Configure rsyslog
          ansible.builtin.copy:
            dest: /etc/rsyslog.d/promtail.conf
            owner: root
            group: root
            mode: "0644"
            content: |
              module(load="imudp")
              input(type="imudp" port="514"
                    name="udp")

              module(load="imtcp")
              input(type="imtcp" port="514"
                    name="tcp")

              # Only forward remote logs
              if ($inputname == "tcp" or $inputname == "udp") then {
                *.* action(type="omfwd"
                           protocol="tcp"
                           target="127.0.0.1"
                           port="{{ promtail_syslog_port }}"
                           Template="RSYSLOG_SyslogProtocol23Format"
                           TCP_Framing="octet-counted"
                           KeepAlive="on")
              }
          notify: Restart rsyslog

        - name: Allow rsyslog remote connections
          ansible.posix.seboolean:
            name: nis_enabled
            state: true
            persistent: true
          when:
            - ansible_os_family == 'RedHat'
            - ansible_selinux.status == "enabled"

    # Must manually create user, create thanos policy and assign it to user
    - name: Create Thanos bucket
      delegate_to: localhost
      amazon.aws.s3_bucket:
        access_key: "{{ hostvars['minio01'].s3_admin_access_key }}"
        secret_key: "{{ hostvars['minio01'].s3_admin_secret_key }}"
        s3_url: "{{ s3_url }}"
        name: thanos
      tags: ["bucket"]

    - name: Copy Mikrotik CA
      ansible.builtin.copy:
        src: "{{ repo_base_dir }}/files/mikrotik/ca.crt"
        dest: /etc/pki/ca-trust/source/anchors/mt-ca.crt
        owner: root
        group: root
        mode: "0644"
      notify: Update CA trust
      tags: ["mktxp"]

  roles:
    - role: ipmi_exporter
      tags: ["ipmi_exporter"]

    - role: mktxp
      tags: ["mktxp"]

    - role: grafana
      tags: ["grafana"]

    - role: cloudalchemy.pushgateway
      tags: ["pushgateway"]

    - role: thanos
      tags: ["thanos"]

  handlers:
    - name: Restart rsyslog
      ansible.builtin.service:
        name: rsyslog
        state: restarted

    - name: Update CA trust  # noqa no-changed-when
      ansible.builtin.command: /usr/bin/update-ca-trust
