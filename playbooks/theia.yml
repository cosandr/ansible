#!/usr/bin/env -S ansible-playbook
---

- name: Provision Theia
  hosts: theia
  pre_tasks:
    - name: Install packages [EL]
      ansible.builtin.dnf:
        name: "{{ dnf_packages }}"
        state: present
      when:
        - ansible_os_family == 'RedHat'
      tags: ["install"]

    - name: Prepare Synology borg SSH
      ansible.builtin.include_role:
        name: auto_ssh
        apply:
          become: true
          tags: ["auto-ssh", "borg"]
      vars:
        ssh_hosts_comment: "auto-ssh {{ inventory_hostname }}-syno"
        ssh_dest_hosts: ["syno"]
        ssh_dest_dir: "{{ hostvars['syno'].borg_home }}/.ssh"
        ssh_dest_user: "{{ hostvars['syno'].borg_user }}"
        ssh_dest_group: "{{ hostvars['syno'].borg_group }}"
        ssh_key_options: >-
          command="cd {{ hostvars['syno'].borg_pool }}/{{ inventory_hostname }};
          {{ hostvars['syno'].borg_serve_bin }} serve --restrict-to-path {{ hostvars['syno'].borg_pool }}/{{ inventory_hostname }}",restrict
      tags: ["auto-ssh", "borg"]

    - name: Ensure Borg directory exists
      delegate_to: syno
      become: true
      ansible.builtin.file:
        path: "{{ hostvars['syno'].borg_pool }}/{{ inventory_hostname }}"
        state: directory
        owner: "{{ hostvars['syno'].borg_user }}"
        group: "{{ hostvars['syno'].borg_group }}"
        mode: 0750
      tags: ["borg"]

  tasks:
    - name: Include common tasks
      ansible.builtin.include_tasks:
        file: ../tasks/common_servers.yml
      tags: ["always"]

    - name: Include hypervisor tasks
      ansible.builtin.include_tasks:
        file: ../tasks/kvm_hypervisors.yml
        apply:
          tags: ["hypervisor"]
      tags: ["always"]

    - name: Set tank SELinux context
      community.general.sefcontext:
        target: "/mnt/tank(/.*)?"
        setype: var_t
        state: present
      notify: Restore tank SELinux context
      tags: ["selinux"]

    - name: Install tmuxinator
      community.general.gem:
        name: tmuxinator
        state: present
        norc: true
        user_install: false
      tags: ["tmuxinator"]

    # Requires EPEL
    - name: Install rclone
      ansible.builtin.dnf:
        name: rclone
        state: present
      tags: ["rclone"]

    - name: Install php-fpm
      ansible.builtin.dnf:
        name:
          - php
          - php-cli
          - php-common
          - php-fpm
          - php-gd
          - php-intl
          - php-mbstring
          - php-opcache
          - php-pdo
          - php-pecl-imagick
          - php-pecl-zip
          - php-pgsql
          - php-process
          - php-sodium
          - php-xml
        state: present
      tags: ["php"]

    # TODO: Install SELinux modules

  roles:
    - role: systemd_networkd
      tags: ["networkd"]

    - role: borg
      tags: ["borg"]

    - role: samba
      tags: ["samba"]

    - role: fzf
      tags: ["fzf"]

    - role: btrbk
      tags: ["btrbk"]

    - role: chezmoi
      tags: ["chezmoi"]

    - role: systemd
      tags: ["systemd", "rclone"]

    - role: nginx_pre
      tags: ["nginx"]

    - role: nginx
      tags: ["nginx"]

    - role: auto_ssh
      tags: ["auto-ssh"]

  handlers:
    - name: Restore tank SELinux context
      ansible.builtin.command: restorecon -r /mnt/tank

    - name: Dracut regenerate
      command: dracut -f --regenerate-all
