---

- hosts: theia
  pre_tasks:
    - name: Install packages [RHEL]
      ansible.builtin.dnf:
        name: "{{ dnf_rhel_packages }}"
        state: present
      when:
        - ansible_os_family == 'RedHat'
        - ansible_distribution != 'Fedora'
      tags: ["install"]

    - name: Configure cpupower
      ansible.builtin.lineinfile:
        path: /etc/sysconfig/cpupower
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - regexp: '^CPUPOWER_START_OPTS='
          line: 'CPUPOWER_START_OPTS="frequency-set -g {{ cpupower_start_governor }}"'
        - regexp: '^CPUPOWER_STOP_OPTS='
          line: 'CPUPOWER_STOP_OPTS="frequency-set -g {{ cpupower_stop_governor }}"'
      loop_control:
        label: "{{ item.regexp }}"
      tags: ["cpupower"]

    - name: Enable and start cpupower service
      ansible.builtin.systemd:
        name: cpupower.service
        enabled: true
        state: started
      tags: ["cpupower"]

  tasks:
    - name: Install libvirt KVM
      ansible.builtin.dnf:
        name:
          - qemu-kvm
          - libvirt
          - virt-manager
          - virt-install
          - guestfs-tools
          - python3-libvirt
        state: present
      tags: ["libvirt", "install"]

    - name: Enable and start libvirtd
      ansible.builtin.systemd:
        name: libvirtd.service
        state: started
        enabled: true
      tags: ["libvirt"]

    - name: Configure NFS shares
      ansible.builtin.blockinfile:
        path: /etc/exports
        content: |
          {% for s in nfs_shares %}
          {{ s.path }}{% for h in s.sources %} {{ h }}({{ s.options }}){% endfor %}

          {% endfor %}
      notify: Reload NFS shares
      tags: ["nfs"]

    - name: Enable and start NFS server
      ansible.builtin.systemd:
        name: nfs-server.service
        state: started
        enabled: true
      tags: ["nfs"]

    - name: Install systemd-timesyncd
      ansible.builtin.dnf:
        name: systemd-timesyncd
        state: present
      tags: ["timesyncd"]

    - name: Enable and start systemd-timesyncd
      ansible.builtin.systemd:
        name: systemd-timesyncd.service
        state: started
        enabled: true
      tags: ["timesyncd"]

    - name: Enable zpool scrub timers
      ansible.builtin.systemd:
        name: "zfs-scrub-{{ item.schedule }}@{{ item.pool }}.timer"
        state: started
        enabled: true
      loop: "{{ zfs_scrub_timers | default([]) }}"
      tags: ["zfs", "scrub"]

    - name: Set tank SELinux context
      community.general.sefcontext:
        target: "/mnt/tank(/.*)?"
        setype: var_t
        state: present
      notify: Restore tank SELinux context
      tags: ["selinux"]

  roles:
    - role: systemd_networkd
      tags: ["networkd"]

    - role: dracut-sshd
      tags: ["dracut-sshd"]

    - role: firewall_config
      tags: ["firewall"]

    - role: clevis
      tags: ["clevis"]

    - role: samba
      tags: ["samba"]

    - role: fzf
      tags: ["fzf"]

    - role: zfs_zed
      tags: ["zfs", "zed"]

    - role: chezmoi
      tags: ["chezmoi"]

    - role: sanoid
      tags: ["sanoid"]

    - role: libvirt_vm
      tags: ["vms"]

    - role: node_exporter
      tags: ["node_exporter"]

  handlers:
    - name: Restore tank SELinux context
      ansible.builtin.command: restorecon -r /mnt/tank

    - name: Reload NFS shares
      ansible.builtin.command: exportfs -ar
