#!/usr/bin/env -S ansible-playbook
---

- hosts: theia
  pre_tasks:
    - name: Install packages [RHEL]
      ansible.builtin.dnf:
        name: "{{ dnf_rhel_packages }}"
        state: present
      when:
        - ansible_os_family == 'RedHat'
        - ansible_distribution != 'Fedora'
      tags: ["install"]

    - name: Ensure /var/log/journal exists
      ansible.builtin.file:
        path: /var/log/journal
        state: directory
        owner: root
        group: root
        mode: 0755
      notify: Reload systemd-journal
      tags: ["journald"]

  tasks:
    - name: Include common tasks
      ansible.builtin.include_tasks:
        file: ../tasks/common_servers.yml
      tags: ["always"]

    - name: Include hypervisor tasks
      ansible.builtin.include_tasks:
        file: ../tasks/kvm_hypervisors.yml
        apply:
          tags: ["hypervisor"]
      tags: ["always"]

    - name: Install systemd-timesyncd
      ansible.builtin.dnf:
        name: systemd-timesyncd
        state: present
      tags: ["timesyncd"]

    - name: Enable and start systemd-timesyncd
      ansible.builtin.systemd:
        name: systemd-timesyncd.service
        state: started
        enabled: true
      tags: ["timesyncd"]

    - name: Enable zpool scrub timers
      ansible.builtin.systemd:
        name: "zfs-scrub-{{ item.schedule }}@{{ item.pool }}.timer"
        state: started
        enabled: true
      loop: "{{ zfs_scrub_timers | default([]) }}"
      tags: ["zfs", "scrub"]

    - name: Configure max ZFS ARC size
      ansible.builtin.lineinfile:
        path: /etc/modprobe.d/zfs.conf
        regexp: '^options zfs.*'
        line: 'options zfs zfs_arc_max={{ zfs_arc_max_gb * 2**30 }}'
      notify: Dracut regenerate
      tags: ["zfs", "arc"]

    - name: Set tank SELinux context
      community.general.sefcontext:
        target: "/mnt/tank(/.*)?"
        setype: var_t
        state: present
      notify: Restore tank SELinux context
      tags: ["selinux"]

    - name: Install tmuxinator
      community.general.gem:
        name: tmuxinator
        state: present
        norc: true
        user_install: false
      tags: ["tmuxinator"]

    # Requires EPEL
    - name: Install rclone
      ansible.builtin.dnf:
        name: rclone
        state: present
      tags: ["rclone"]

    - name: Install php-fpm
      ansible.builtin.dnf:
        name:
          - php
          - php-cli
          - php-common
          - php-fpm
          - php-gd
          - php-intl
          - php-mbstring
          - php-opcache
          - php-pdo
          - php-pecl-imagick
          - php-pecl-zip
          - php-pgsql
          - php-process
          - php-sodium
          - php-xml
        state: present
      tags: ["php"]

    # TODO: Install SELinux modules

  roles:
    - role: systemd_networkd
      tags: ["networkd"]

    - role: dracut-sshd
      tags: ["dracut-sshd"]

    - role: clevis
      tags: ["clevis"]

    - role: samba
      tags: ["samba"]

    - role: fzf
      tags: ["fzf"]

    - role: zfs_zed
      tags: ["zfs", "zed"]

    - role: chezmoi
      tags: ["chezmoi"]

    - role: sanoid
      tags: ["sanoid"]

    - role: serial_proxy
      tags: ["serial"]

    - role: libvirt_vm
      tags: ["vms"]

    - role: systemd
      tags: ["systemd", "rclone"]

    - role: nginx_pre
      tags: ["nginx"]

    - role: nginx
      tags: ["nginx"]

    - role: auto_ssh
      tags: ["auto-ssh"]

  handlers:
    - name: Reload systemd-journal
      ansible.builtin.command: killall -USR1 systemd-journal

    - name: Restore tank SELinux context
      ansible.builtin.command: restorecon -r /mnt/tank

    - name: Dracut regenerate
      command: dracut -f --regenerate-all
