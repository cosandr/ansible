#!/usr/bin/env -S ansible-playbook
---

- name: Bootstrap Flatcar
  hosts: k8s_cluster
  gather_facts: false
  tags: ["system"]
  tasks:
    - name: Run kubespray bootstrap script
      ansible.builtin.script:
        cmd: "{{ repo_base_dir }}/kubespray/roles/bootstrap-os/files/bootstrap.sh"
        creates: "/opt/bin/.bootstrapped"
      when: "'flatcar' in vm_template | lower"

- name: Configure Kubernetes nodes
  gather_facts: true
  hosts: k8s_cluster
  tags: ["system"]
  tasks:
    - name: Check if firewall is active  # noqa command-instead-of-module
      ansible.builtin.command: "systemctl is-active -q {{ firewall_frontend }}"
      register: firewall_enabled
      failed_when: false
      changed_when: false
      check_mode: false
      tags: ["firewall"]

    - name: Stop and disable firewall
      ansible.builtin.systemd:
        name: "{{ firewall_frontend }}"
        state: stopped
        enabled: false
        masked: true
      when: firewall_enabled.rc == 0
      tags: ["firewall"]

    - name: Mask firewall
      ansible.builtin.systemd:
        name: "{{ firewall_frontend }}"
        masked: true
      when: firewall_enabled.rc == 0
      tags: ["firewall"]

    - name: Resolved workarounds
      when: "'flatcar' not in vm_template | lower"
      block:
        - name: Check systemd-resolved  # noqa command-instead-of-module
          ansible.builtin.command: systemctl is-active -q systemd-resolved
          register: systemd_resolved_enabled
          failed_when: false
          changed_when: false
          check_mode: false
          tags: ["resolv"]

        - name: Disable systemd-resolved
          ansible.builtin.systemd:
            name: systemd-resolved
            state: stopped
            enabled: false
          when: systemd_resolved_enabled.rc == 0
          tags: ["resolv"]

        - name: Check if using resolved-stub
          ansible.builtin.stat:
            path: /etc/resolv.conf
          register: __resolv
          tags: ["resolv"]

        - name: Replace with regular resolv.conf
          ansible.builtin.copy:
            content: |
              {% for s in vm_default_nic.dns_servers %}
              nameserver {{ s }}
              {% endfor %}
            dest: /etc/resolv.conf
            owner: root
            group: root
            mode: "0644"
          when: __resolv.stat.islnk
          tags: ["resolv"]

    - name: Include common tasks
      ansible.builtin.include_tasks:
        file: ../tasks/common_servers.yml
      tags: ["always"]

    - name: Configure default NFS mount options
      ansible.builtin.copy:
        content: |
          [ NFSMount_Global_Options ]
            Background=True
            atime=False
            vers=4.2
        dest: /etc/nfsmount.conf
        owner: root
        group: root
        mode: "0644"
      tags: ["nfs"]

- name: Deploy charts and manifests
  hosts: kube_control_plane[0]
  gather_facts: false
  pre_tasks:
    - name: Install Helm diff plugin
      delegate_to: localhost
      kubernetes.core.helm_plugin:
        plugin_path: https://github.com/databus23/helm-diff
        state: present
      tags: ["helm", "plugins"]
  vars:
    helm_repos:
      - name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"
      - name: ingress-nginx
        repo_url: "https://kubernetes.github.io/ingress-nginx"
  tasks:
    - name: Run on localhost
      delegate_to: localhost
      block:
        - name: Add helm repos
          kubernetes.core.helm_repository:
            name: "{{ item.name }}"
            repo_url: "{{ item.repo_url }}"
          loop: "{{ helm_repos }}"
          loop_control:
            label: "{{ item.name }}"
          tags: ["helm", "repos"]

        # https://github.com/kubernetes/ingress-nginx/tree/main/charts/ingress-nginx
        - name: Deploy ingress-nginx chart
          kubernetes.core.helm:
            name: ingress-nginx
            chart_ref: ingress-nginx/ingress-nginx
            chart_version: "4.x"
            release_namespace: ingress-nginx
            create_namespace: true
            update_repo_cache: true
            release_values: "{{ lookup('template', '{{ repo_base_dir }}/files/k8s/ingress-nginx.yml.j2') | from_yaml }}"
          tags: ["helm", "nginx"]

        # https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
        - name: Deploy Prometheus chart
          kubernetes.core.helm:
            name: prometheus
            chart_ref: prometheus-community/kube-prometheus-stack
            chart_version: "45.x"
            release_namespace: monitoring
            create_namespace: true
            update_repo_cache: true
            release_values: "{{ lookup('template', '{{ repo_base_dir }}/files/k8s/prom.yml.j2') | from_yaml }}"
          tags: ["helm", "prometheus"]
