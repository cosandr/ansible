#!/usr/bin/env -S ansible-playbook
---
- name: Desktop playbook
  gather_facts: false
  hosts: desktop
  pre_tasks:
    - name: Run common role
      import_role:
        name: common
      tags: ["always"]

    - name: Gather facts
      setup:
      tags: ["always"]

    - block:
        - name: Add prometheus servers to internal zone
          firewalld:
            zone: internal
            source: "{{ hostvars[item].ansible_host }}"
            permanent: true
            state: enabled
          loop: "{{ groups['prom'] }}"
          notify: reload firewalld

        - name: Allow ports to internal zone
          firewalld:
            zone: internal
            port: "{{ item }}/tcp"
            permanent: true
            state: enabled
          loop:
            - "{{ aquaero_exporter_port }}"
            - "{{ node_exporter_port }}"
            - "{{ nvidia_exporter_port }}"
          notify: reload firewalld

      tags: ["firewalld"]
  roles:
    - role: borg
      tags: ["borg"]

    - role: node_exporter
      tags: ["node_exporter"]

    - role: btrbk
      tags: ["btrbk"]

    - role: reflector
      tags: ["reflector"]

    - role: arch-common
      tags: ["arch-common"]

    - role: locale_conf
      when: ansible_os_family != 'RedHat'
      tags: ["locale"]

    - role: sudo
      tags: ["sudo"]

    - role: hostname
      tags: ["hostname"]

    - role: systemd_networkd
      when: network_manager == "systemd-networkd"
      tags: ["systemd-networkd"]

    - role: spotify
      tags: ["spotify"]

    - role: chezmoi
      tags: ["chezmoi"]

    - role: discord
      tags: ["discord"]

    - role: paru
      tags: ["paru"]

    - role: sshd
      tags: ["sshd"]

    - role: xorg
      tags: ["xorg"]

    - role: sudo
      tags: ["sudo"]

    - role: sbctl
      tags: ["sbctl"]

    - role: gnome-keyring
      tags: ["gnome-keyring"]

    - role: ddcutil
      tags: ["ddcutil"]

    - role: netclient
      tags: ["netclient"]

    # - role: nvidia_exporter
    #   tags: ["prometheus-stack", "nvidia_exporter"]

  handlers:
    - name: reload firewalld
      service:
        name: firewalld
        state: reloaded
