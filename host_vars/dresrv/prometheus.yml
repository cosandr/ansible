---
desktop_label: "{{ hostvars.desktop.inventory_hostname }}"
laptop_label: "{{ hostvars.laptop.inventory_hostname }}"
drepi_label: "{{ hostvars.drepi.inventory_hostname }}"
server_label: "{{ hostvars.dresrv.inventory_hostname }}"
prometheus_storage_retention: "365d"
prometheus_web_listen_address: "0.0.0.0:{{ prometheus_port }}"
prometheus_global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s
prometheus_alertmanager_config:
  - scheme: http
    static_configs:
      - targets: ["localhost:{{ alertmanager_web_listen_address.split(':')[1] }}"]
prometheus_scrape_configs:
  - job_name: "alertmanager"
    static_configs:
      - targets: ["localhost:{{ alertmanager_web_listen_address.split(':')[1] }}"]
        labels:
          instance: "{{ server_label }}"

  - job_name: "prometheus"
    metrics_path: "{{ prometheus_metrics_path }}"
    static_configs:
      - targets: ["localhost:{{ prometheus_port }}"]
        labels:
          instance: "{{ server_label }}"

  - job_name: "cadvisor"
    static_configs:
      - targets: ["localhost:{{ cadvisor_port }}"]
        labels:
          instance: "{{ server_label }}"

  - job_name: "node"
    static_configs:
      - targets: ["localhost:{{ node_exporter_port }}"]
        labels:
          instance: "{{ server_label }}"
      - targets: ["{{ hostvars['webgw01'].wireguard_ip }}:{{ node_exporter_port }}"]
        labels:
          instance: "{{ hostvars['webgw01'].inventory_hostname }}"
      - targets: ['localhost:17766']
        labels:
          instance: "{{ desktop_label }}"
          __metrics_path__: /node/metrics
      - targets: ["localhost:27766"]
        labels:
          instance: "{{ laptop_label }}"
          __metrics_path__: /node/metrics
      - targets: ["{{ hostvars['drepi'].ansible_host }}:{{ node_exporter_port }}"]
        labels:
          instance: "{{ drepi_label }}"
          __metrics_path__: /metrics

  - job_name: "aquaero"
    scrape_interval: 30s
    static_configs:
      - targets: ["localhost:2782"]
        labels:
          instance: "{{ server_label }}"
      - targets: ["localhost:17766"]
        labels:
          instance: "{{ desktop_label }}"
          __metrics_path__: /aquaero/metrics

  - job_name: "nvidia"
    scrape_interval: 30s
    static_configs:
      - targets: ["localhost:17766"]
        labels:
          instance: "{{ desktop_label }}"
          __metrics_path__: /nvidia/metrics

  - job_name: "fah"
    scrape_interval: 60s
    static_configs:
      - targets: ["localhost:17766"]
        labels:
          instance: "{{ desktop_label }}"
          __metrics_path__: /fah/metrics

  - job_name: "mph"
    scrape_interval: 120s
    static_configs:
      - targets: ["localhost:6743"]
        labels:
          instance: "{{ server_label }}"
      - targets: ["localhost:17766"]
        labels:
          instance: "{{ desktop_label }}"
          __metrics_path__: /mph/metrics

  - job_name: "wmi"
    static_configs:
      - targets: ["localhost:17766"]
        labels:
          instance: "{{ desktop_label }}"
          __metrics_path__: /wmi/metrics
      - targets: ["localhost:27766"]
        labels:
          instance: "{{ laptop_label }}"
          __metrics_path__: /wmi/metrics

  - job_name: "hwinfo"
    static_configs:
      - targets: ["localhost:17766"]
        labels:
          instance: "{{ desktop_label }}"
          __metrics_path__: /hwinfo/metrics

  - job_name: 'postgres'
    scrape_interval: 60s
    static_configs:
      - targets: ["{{ hostvars['pg01'].ansible_host }}:{{ hostvars['pg01'].postgres_exporter_port }}"]
        labels:
          instance: "{{ server_label }}"

  - job_name: 'nginx'
    scrape_interval: 60s
    static_configs:
      - targets: ['localhost:{{ nginx_exporter_port }}']
        labels:
          instance: "{{ server_label }}"

  - job_name: "romeo-tv"
    scheme: https
    scrape_interval: 30s
    scrape_timeout: 20s
    basic_auth:
      username: "{{ hostvars.romsto.scrape_user }}"
      password: "{{ hostvars.romsto.scrape_pass }}"
    static_configs:
      - targets: ['prom.{{ hostvars.romsto.domain }}']
        labels:
          job: "cadvisor"
          instance: "RomeoTV"
          __metrics_path__: /cadvisor

      - targets: ['prom.{{ hostvars.romsto.domain }}']
        labels:
          job: "node"
          instance: "RomeoTV"
          __metrics_path__: /node
prometheus_alert_rules:
  - alert: HostOutOfMemory
    expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}{{ $labels.instance }} low on memory{% endraw %}'
      description: '{% raw %}Node memory is filling up ({{ $value }} left){% endraw %}'
  - alert: ContainerKilled
    expr: time() - container_last_seen > 60
    for: 10m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}{{ $labels.name }} container dead{% endraw %}'
  - alert: HostSystemdServiceCrashed
    expr: node_systemd_unit_state{state="failed"} == 1
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}{{ $labels.name }} systemd service {{ $labels.state }} on {{ $labels.instance }}{% endraw %}'
  - alert: InstanceDown
    expr: 'up{instance!="{{ desktop_label }}",instance!="{{ laptop_label }}",job!="mph"} == 0'
    for: 10m
    labels:
      severity: critical
    annotations:
      summary: '{% raw %}Job {{ $labels.job }} on {{ $labels.instance }} down{% endraw %}'
  - alert: NodeFilesystemSpaceFillingUp
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up.{% endraw %}'
      summary: 'Filesystem is predicted to run out of space within the next 24 hours.'
    expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 40\nand\n  predict_linear(node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"}[6h], 24*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeFilesystemSpaceFillingUp
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up fast.{% endraw %}'
      summary: 'Filesystem is predicted to run out of space within the next 4 hours.'
    expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 20\nand\n  predict_linear(node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"}[6h], 4*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: critical
  - alert: NodeFilesystemAlmostOutOfSpace
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.{% endraw %}'
      summary: 'Filesystem has less than 5% space left.'
    expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 5\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeFilesystemAlmostOutOfSpace
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.{% endraw %}'
      summary: 'Filesystem has less than 3% space left.'
    expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 3\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: critical
  - alert: NodeFilesystemFilesFillingUp
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up.{% endraw %}'
      summary: 'Filesystem is predicted to run out of inodes within the next 24 hours.'
    expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 40\nand\n  predict_linear(node_filesystem_files_free{job=\"node\",fstype!=\"\"}[6h], 24*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeFilesystemFilesFillingUp
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up fast.{% endraw %}'
      summary: 'Filesystem is predicted to run out of inodes within the next 4 hours.'
    expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 20\nand\n  predict_linear(node_filesystem_files_free{job=\"node\",fstype!=\"\"}[6h], 4*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: critical
  - alert: NodeFilesystemAlmostOutOfFiles
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.{% endraw %}'
      summary: 'Filesystem has less than 5% inodes left.'
    expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 5\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeFilesystemAlmostOutOfFiles
    annotations:
      description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.{% endraw %}'
      summary: 'Filesystem has less than 3% inodes left.'
    expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 3\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
    for: 1h
    labels:
      severity: critical
  - alert: NodeNetworkReceiveErrs
    annotations:
      description: '{% raw %}{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf "%.0f" $value }} receive errors in the last two minutes.{% endraw %}'
      summary: 'Network interface is reporting many receive errors.'
    expr: "increase(node_network_receive_errs_total[2m]) > 10\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeNetworkTransmitErrs
    annotations:
      description: '{% raw %}{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf "%.0f" $value }} transmit errors in the last two minutes.{% endraw %}'
      summary: 'Network interface is reporting many transmit errors.'
    expr: "increase(node_network_transmit_errs_total[2m]) > 10\n"
    for: 1h
    labels:
      severity: warning
  - alert: NodeHighNumberConntrackEntriesUsed
    annotations:
      description: '{% raw %}{{ $value | humanizePercentage }} of conntrack entries are used{% endraw %}'
      summary: 'Number of conntrack are getting close to the limit'
    expr: "(node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75\n"
    labels:
      severity: warning
  - alert: NodeClockSkewDetected
    annotations:
      message: '{% raw %}Clock on {{ $labels.instance }} is out of sync by more than 300s. Ensure NTP is configured correctly on this host.{% endraw %}'
      summary: 'Clock skew detected.'
    expr: "(\n  node_timex_offset_seconds > 0.05\nand\n  deriv(node_timex_offset_seconds[5m]) >= 0\n)\nor\n(\n  node_timex_offset_seconds < -0.05\nand\n  deriv(node_timex_offset_seconds[5m]) <= 0\n)\n"
    for: 10m
    labels:
      severity: warning
  - alert: NodeClockNotSynchronising
    annotations:
      message: '{% raw %}Clock on {{ $labels.instance }} is not synchronising. Ensure NTP is configured on this host.{% endraw %}'
      summary: 'Clock not synchronising.'
    expr: "min_over_time(node_timex_sync_status[5m]) == 0\n"
    for: 10m
    labels:
      severity: warning
